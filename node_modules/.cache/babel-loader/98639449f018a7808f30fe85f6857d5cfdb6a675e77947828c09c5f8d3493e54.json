{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setLoggingEnabled = void 0;\nasync function setLoggingEnabled(client, enabled) {\n  await client.request({\n    method: `${client.mode}_setLoggingEnabled`,\n    params: [enabled]\n  });\n}\nexports.setLoggingEnabled = setLoggingEnabled;","map":{"version":3,"names":["setLoggingEnabled","client","enabled","request","method","mode","params","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/actions/test/setLoggingEnabled.ts"],"sourcesContent":["import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SetLoggingEnabledErrorType = RequestErrorType | ErrorType\n\n/**\n * Enable or disable logging on the test node network.\n *\n * - Docs: https://viem.sh/docs/actions/test/setLoggingEnabled.html\n *\n * @param client - Client to use\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setLoggingEnabled } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setLoggingEnabled(client)\n */\nexport async function setLoggingEnabled<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  enabled: boolean,\n) {\n  await client.request({\n    method: `${client.mode}_setLoggingEnabled`,\n    params: [enabled],\n  })\n}\n"],"mappings":";;;;;;AA+BO,eAAeA,iBAAiBA,CAIrCC,MAAsE,EACtEC,OAAgB;EAEhB,MAAMD,MAAM,CAACE,OAAO,CAAC;IACnBC,MAAM,EAAE,GAAGH,MAAM,CAACI,IAAI,oBAAoB;IAC1CC,MAAM,EAAE,CAACJ,OAAO;GACjB,CAAC;AACJ;AAXAK,OAAA,CAAAP,iBAAA,GAAAA,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}