{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/src/writeContract.js\",\n  _s = $RefreshSig$();\nimport { simulateContract, writeContract } from '@wagmi/core';\nimport { abi } from './abi';\nimport { config } from './config';\nimport { useEffect } from 'react';\nimport { useAccount, useConnect, useDisconnect } from 'wagmi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WriteContract = () => {\n  _s();\n  const {\n    isConnected\n  } = useConnect();\n  const account = useAccount();\n  const write = async () => {\n    try {\n      if (account.status === \"connected\") {\n        console.log(\"ji d\");\n        const request = await writeContract(config, {\n          abi,\n          address: '0x6F3D64e226570fE58D257b085eb5E43B351109DD',\n          functionName: 'approve',\n          args: [\"0x8011B8498D5A2E2062f21C81d252C4f623435fBe\", 1e19]\n        });\n        console.log(request, \"req\");\n      } else {\n        console.log(\"not connected\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => write(),\n    children: \"Write\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(WriteContract, \"Qpsqp34hbOVczfcPwwOFfL5jy+g=\", false, function () {\n  return [useConnect, useAccount];\n});\n_c = WriteContract;\nexport default WriteContract;\nvar _c;\n$RefreshReg$(_c, \"WriteContract\");","map":{"version":3,"names":["simulateContract","writeContract","abi","config","useEffect","useAccount","useConnect","useDisconnect","jsxDEV","_jsxDEV","WriteContract","_s","isConnected","account","write","status","console","log","request","address","functionName","args","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/src/writeContract.js"],"sourcesContent":["\n\nimport { simulateContract, writeContract } from '@wagmi/core'\nimport { abi } from './abi'\nimport { config } from './config'\nimport { useEffect } from 'react'\nimport { useAccount, useConnect, useDisconnect } from 'wagmi'\n\nconst WriteContract = () => {\n    const { isConnected } = useConnect()\n    const account = useAccount()\n\n    const write = async () => {\n        try {\n            if (account.status === \"connected\") {\n                console.log(\"ji d\");\n                const request = await writeContract(config, {\n                    abi,\n                    address: '0x6F3D64e226570fE58D257b085eb5E43B351109DD',\n                    functionName: 'approve',\n                    args: [\"0x8011B8498D5A2E2062f21C81d252C4f623435fBe\", 1e19],\n                })\n                console.log(request, \"req\");\n            } else {\n                console.log(\"not connected\");\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    return (\n        <div onClick={() => write()}>Write</div>\n    )\n}\n\nexport default WriteContract;\n"],"mappings":";;AAEA,SAASA,gBAAgB,EAAEC,aAAa,QAAQ,aAAa;AAC7D,SAASC,GAAG,QAAQ,OAAO;AAC3B,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,EAAEC,UAAU,EAAEC,aAAa,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAY,CAAC,GAAGN,UAAU,CAAC,CAAC;EACpC,MAAMO,OAAO,GAAGR,UAAU,CAAC,CAAC;EAE5B,MAAMS,KAAK,GAAG,MAAAA,CAAA,KAAY;IACtB,IAAI;MACA,IAAID,OAAO,CAACE,MAAM,KAAK,WAAW,EAAE;QAChCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnB,MAAMC,OAAO,GAAG,MAAMjB,aAAa,CAACE,MAAM,EAAE;UACxCD,GAAG;UACHiB,OAAO,EAAE,4CAA4C;UACrDC,YAAY,EAAE,SAAS;UACvBC,IAAI,EAAE,CAAC,4CAA4C,EAAE,IAAI;QAC7D,CAAC,CAAC;QACFL,OAAO,CAACC,GAAG,CAACC,OAAO,EAAE,KAAK,CAAC;MAC/B,CAAC,MAAM;QACHF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAChC;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;IACtB;EACJ,CAAC;EACD,oBACIb,OAAA;IAAKc,OAAO,EAAEA,CAAA,KAAMT,KAAK,CAAC,CAAE;IAAAU,QAAA,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEhD,CAAC;AAAAjB,EAAA,CAzBKD,aAAa;EAAA,QACSJ,UAAU,EAClBD,UAAU;AAAA;AAAAwB,EAAA,GAFxBnB,aAAa;AA2BnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}