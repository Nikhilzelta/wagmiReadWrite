{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeFunctionData = void 0;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst concat_js_1 = require(\"../data/concat.js\");\nconst getFunctionSelector_js_1 = require(\"../hash/getFunctionSelector.js\");\nconst encodeAbiParameters_js_1 = require(\"./encodeAbiParameters.js\");\nconst formatAbiItem_js_1 = require(\"./formatAbiItem.js\");\nconst getAbiItem_js_1 = require(\"./getAbiItem.js\");\nfunction encodeFunctionData({\n  abi,\n  args,\n  functionName\n}) {\n  let abiItem = abi[0];\n  if (functionName) {\n    abiItem = (0, getAbiItem_js_1.getAbiItem)({\n      abi,\n      args,\n      name: functionName\n    });\n    if (!abiItem) throw new abi_js_1.AbiFunctionNotFoundError(functionName, {\n      docsPath: '/docs/contract/encodeFunctionData'\n    });\n  }\n  if (abiItem.type !== 'function') throw new abi_js_1.AbiFunctionNotFoundError(undefined, {\n    docsPath: '/docs/contract/encodeFunctionData'\n  });\n  const definition = (0, formatAbiItem_js_1.formatAbiItem)(abiItem);\n  const signature = (0, getFunctionSelector_js_1.getFunctionSelector)(definition);\n  const data = 'inputs' in abiItem && abiItem.inputs ? (0, encodeAbiParameters_js_1.encodeAbiParameters)(abiItem.inputs, args ?? []) : undefined;\n  return (0, concat_js_1.concatHex)([signature, data ?? '0x']);\n}\nexports.encodeFunctionData = encodeFunctionData;","map":{"version":3,"names":["abi_js_1","require","concat_js_1","getFunctionSelector_js_1","encodeAbiParameters_js_1","formatAbiItem_js_1","getAbiItem_js_1","encodeFunctionData","abi","args","functionName","abiItem","getAbiItem","name","AbiFunctionNotFoundError","docsPath","type","undefined","definition","formatAbiItem","signature","getFunctionSelector","data","inputs","encodeAbiParameters","concatHex","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/abi/encodeFunctionData.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  GetFunctionArgs,\n  InferFunctionName,\n} from '../../types/contract.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../hash/getFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './getAbiItem.js'\n\nexport type EncodeFunctionDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n} & (TFunctionName extends string\n  ? { abi: TAbi } & GetFunctionArgs<TAbi, TFunctionName>\n  : _FunctionName extends string\n    ? { abi: [TAbi[number]] } & GetFunctionArgs<TAbi, _FunctionName>\n    : never)\n\nexport type EncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | GetFunctionSelectorErrorType\n  | ErrorType\n\nexport function encodeFunctionData<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  args,\n  functionName,\n}: EncodeFunctionDataParameters<TAbi, TFunctionName>) {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiFunctionNotFoundError(functionName, {\n        docsPath: '/docs/contract/encodeFunctionData',\n      })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeFunctionData',\n    })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getFunctionSelector(definition)\n  const data =\n    'inputs' in abiItem && abiItem.inputs\n      ? encodeAbiParameters(abiItem.inputs, (args ?? []) as readonly unknown[])\n      : undefined\n  return concatHex([signature, data ?? '0x'])\n}\n"],"mappings":";;;;;;AAEA,MAAAA,QAAA,GAAAC,OAAA;AASA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,wBAAA,GAAAF,OAAA;AAMA,MAAAG,wBAAA,GAAAH,OAAA;AAIA,MAAAI,kBAAA,GAAAJ,OAAA;AACA,MAAAK,eAAA,GAAAL,OAAA;AA2BA,SAAgBM,kBAAkBA,CAGhC;EACAC,GAAG;EACHC,IAAI;EACJC;AAAY,CACsC;EAClD,IAAIC,OAAO,GAAGH,GAAG,CAAC,CAAC,CAAY;EAC/B,IAAIE,YAAY,EAAE;IAChBC,OAAO,GAAG,IAAAL,eAAA,CAAAM,UAAU,EAAC;MACnBJ,GAAG;MACHC,IAAI;MACJI,IAAI,EAAEH;KACiB,CAAC;IAC1B,IAAI,CAACC,OAAO,EACV,MAAM,IAAIX,QAAA,CAAAc,wBAAwB,CAACJ,YAAY,EAAE;MAC/CK,QAAQ,EAAE;KACX,CAAC;;EAGN,IAAIJ,OAAO,CAACK,IAAI,KAAK,UAAU,EAC7B,MAAM,IAAIhB,QAAA,CAAAc,wBAAwB,CAACG,SAAS,EAAE;IAC5CF,QAAQ,EAAE;GACX,CAAC;EAEJ,MAAMG,UAAU,GAAG,IAAAb,kBAAA,CAAAc,aAAa,EAACR,OAAO,CAAC;EACzC,MAAMS,SAAS,GAAG,IAAAjB,wBAAA,CAAAkB,mBAAmB,EAACH,UAAU,CAAC;EACjD,MAAMI,IAAI,GACR,QAAQ,IAAIX,OAAO,IAAIA,OAAO,CAACY,MAAM,GACjC,IAAAnB,wBAAA,CAAAoB,mBAAmB,EAACb,OAAO,CAACY,MAAM,EAAGd,IAAI,IAAI,EAAyB,CAAC,GACvEQ,SAAS;EACf,OAAO,IAAAf,WAAA,CAAAuB,SAAS,EAAC,CAACL,SAAS,EAAEE,IAAI,IAAI,IAAI,CAAC,CAAC;AAC7C;AAjCAI,OAAA,CAAAnB,kBAAA,GAAAA,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}