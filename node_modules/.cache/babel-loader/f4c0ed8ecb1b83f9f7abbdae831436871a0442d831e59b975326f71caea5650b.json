{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.internal_estimateMaxPriorityFeePerGas = exports.estimateMaxPriorityFeePerGas = void 0;\nconst fee_js_1 = require(\"../../errors/fee.js\");\nconst fromHex_js_1 = require(\"../../utils/encoding/fromHex.js\");\nconst getAction_js_1 = require(\"../../utils/getAction.js\");\nconst getBlock_js_1 = require(\"./getBlock.js\");\nconst getGasPrice_js_1 = require(\"./getGasPrice.js\");\nasync function estimateMaxPriorityFeePerGas(client, args) {\n  return internal_estimateMaxPriorityFeePerGas(client, args);\n}\nexports.estimateMaxPriorityFeePerGas = estimateMaxPriorityFeePerGas;\nasync function internal_estimateMaxPriorityFeePerGas(client, args) {\n  const {\n    block: block_,\n    chain = client.chain,\n    request\n  } = args || {};\n  if (typeof chain?.fees?.defaultPriorityFee === 'function') {\n    const block = block_ || (await (0, getAction_js_1.getAction)(client, getBlock_js_1.getBlock, 'getBlock')({}));\n    return chain.fees.defaultPriorityFee({\n      block,\n      client,\n      request\n    });\n  }\n  if (typeof chain?.fees?.defaultPriorityFee !== 'undefined') return chain?.fees?.defaultPriorityFee;\n  try {\n    const maxPriorityFeePerGasHex = await client.request({\n      method: 'eth_maxPriorityFeePerGas'\n    });\n    return (0, fromHex_js_1.hexToBigInt)(maxPriorityFeePerGasHex);\n  } catch {\n    const [block, gasPrice] = await Promise.all([block_ ? Promise.resolve(block_) : (0, getAction_js_1.getAction)(client, getBlock_js_1.getBlock, 'getBlock')({}), (0, getAction_js_1.getAction)(client, getGasPrice_js_1.getGasPrice, 'getGasPrice')({})]);\n    if (typeof block.baseFeePerGas !== 'bigint') throw new fee_js_1.Eip1559FeesNotSupportedError();\n    const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas;\n    if (maxPriorityFeePerGas < 0n) return 0n;\n    return maxPriorityFeePerGas;\n  }\n}\nexports.internal_estimateMaxPriorityFeePerGas = internal_estimateMaxPriorityFeePerGas;","map":{"version":3,"names":["fee_js_1","require","fromHex_js_1","getAction_js_1","getBlock_js_1","getGasPrice_js_1","estimateMaxPriorityFeePerGas","client","args","internal_estimateMaxPriorityFeePerGas","exports","block","block_","chain","request","fees","defaultPriorityFee","getAction","getBlock","maxPriorityFeePerGasHex","method","hexToBigInt","gasPrice","Promise","all","resolve","getGasPrice","baseFeePerGas","Eip1559FeesNotSupportedError","maxPriorityFeePerGas"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/actions/public/estimateMaxPriorityFeePerGas.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Chain, ChainFeesFnParameters } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToBigIntErrorType,\n  hexToBigInt,\n} from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateMaxPriorityFeePerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n> = GetChain<chain, chainOverride>\n\nexport type EstimateMaxPriorityFeePerGasReturnType = bigint\n\nexport type EstimateMaxPriorityFeePerGasErrorType =\n  | GetBlockErrorType\n  | HexToBigIntErrorType\n  | RequestErrorType\n  | GetBlockErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the max priority fee per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains.html#fees-defaultpriorityfee) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas.html\n *\n * @param client - Client to use\n * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateMaxPriorityFeePerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)\n * // 10000000n\n */\nexport async function estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>,\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  return internal_estimateMaxPriorityFeePerGas(client, args as any)\n}\n\nexport async function internal_estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride> & {\n    block?: Block\n    request?: PrepareTransactionRequestParameters<\n      chain,\n      Account | undefined,\n      chainOverride\n    >\n  },\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  const { block: block_, chain = client.chain, request } = args || {}\n  if (typeof chain?.fees?.defaultPriorityFee === 'function') {\n    const block = block_ || (await getAction(client, getBlock, 'getBlock')({}))\n    return chain.fees.defaultPriorityFee({\n      block,\n      client,\n      request,\n    } as ChainFeesFnParameters)\n  }\n\n  if (typeof chain?.fees?.defaultPriorityFee !== 'undefined')\n    return chain?.fees?.defaultPriorityFee\n\n  try {\n    const maxPriorityFeePerGasHex = await client.request({\n      method: 'eth_maxPriorityFeePerGas',\n    })\n    return hexToBigInt(maxPriorityFeePerGasHex)\n  } catch {\n    // If the RPC Provider does not support `eth_maxPriorityFeePerGas`\n    // fall back to calculating it manually via `gasPrice - baseFeePerGas`.\n    // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee\n    const [block, gasPrice] = await Promise.all([\n      block_\n        ? Promise.resolve(block_)\n        : getAction(client, getBlock, 'getBlock')({}),\n      getAction(client, getGasPrice, 'getGasPrice')({}),\n    ])\n\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas\n\n    if (maxPriorityFeePerGas < 0n) return 0n\n    return maxPriorityFeePerGas\n  }\n}\n"],"mappings":";;;;;;AAEA,MAAAA,QAAA,GAAAC,OAAA;AAUA,MAAAC,YAAA,GAAAD,OAAA;AAIA,MAAAE,cAAA,GAAAF,OAAA;AAEA,MAAAG,aAAA,GAAAH,OAAA;AACA,MAAAI,gBAAA,GAAAJ,OAAA;AAwCO,eAAeK,4BAA4BA,CAIhDC,MAAgC,EAChCC,IAAmE;EAEnE,OAAOC,qCAAqC,CAACF,MAAM,EAAEC,IAAW,CAAC;AACnE;AARAE,OAAA,CAAAJ,4BAAA,GAAAA,4BAAA;AAUO,eAAeG,qCAAqCA,CAIzDF,MAAgC,EAChCC,IAOC;EAED,MAAM;IAAEG,KAAK,EAAEC,MAAM;IAAEC,KAAK,GAAGN,MAAM,CAACM,KAAK;IAAEC;EAAO,CAAE,GAAGN,IAAI,IAAI,EAAE;EACnE,IAAI,OAAOK,KAAK,EAAEE,IAAI,EAAEC,kBAAkB,KAAK,UAAU,EAAE;IACzD,MAAML,KAAK,GAAGC,MAAM,KAAK,MAAM,IAAAT,cAAA,CAAAc,SAAS,EAACV,MAAM,EAAEH,aAAA,CAAAc,QAAQ,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3E,OAAOL,KAAK,CAACE,IAAI,CAACC,kBAAkB,CAAC;MACnCL,KAAK;MACLJ,MAAM;MACNO;KACwB,CAAC;;EAG7B,IAAI,OAAOD,KAAK,EAAEE,IAAI,EAAEC,kBAAkB,KAAK,WAAW,EACxD,OAAOH,KAAK,EAAEE,IAAI,EAAEC,kBAAkB;EAExC,IAAI;IACF,MAAMG,uBAAuB,GAAG,MAAMZ,MAAM,CAACO,OAAO,CAAC;MACnDM,MAAM,EAAE;KACT,CAAC;IACF,OAAO,IAAAlB,YAAA,CAAAmB,WAAW,EAACF,uBAAuB,CAAC;GAC5C,CAAC,MAAM;IAIN,MAAM,CAACR,KAAK,EAAEW,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC1CZ,MAAM,GACFW,OAAO,CAACE,OAAO,CAACb,MAAM,CAAC,GACvB,IAAAT,cAAA,CAAAc,SAAS,EAACV,MAAM,EAAEH,aAAA,CAAAc,QAAQ,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAC/C,IAAAf,cAAA,CAAAc,SAAS,EAACV,MAAM,EAAEF,gBAAA,CAAAqB,WAAW,EAAE,aAAa,CAAC,CAAC,EAAE,CAAC,CAClD,CAAC;IAEF,IAAI,OAAOf,KAAK,CAACgB,aAAa,KAAK,QAAQ,EACzC,MAAM,IAAI3B,QAAA,CAAA4B,4BAA4B,EAAE;IAE1C,MAAMC,oBAAoB,GAAGP,QAAQ,GAAGX,KAAK,CAACgB,aAAa;IAE3D,IAAIE,oBAAoB,GAAG,EAAE,EAAE,OAAO,EAAE;IACxC,OAAOA,oBAAoB;;AAE/B;AAnDAnB,OAAA,CAAAD,qCAAA,GAAAA,qCAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}