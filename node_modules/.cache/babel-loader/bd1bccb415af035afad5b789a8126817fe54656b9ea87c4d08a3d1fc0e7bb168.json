{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.publicKeyToAddress = exports.parseAccount = void 0;\nvar parseAccount_js_1 = require(\"../accounts/utils/parseAccount.js\");\nObject.defineProperty(exports, \"parseAccount\", {\n  enumerable: true,\n  get: function () {\n    return parseAccount_js_1.parseAccount;\n  }\n});\nvar publicKeyToAddress_js_1 = require(\"../accounts/utils/publicKeyToAddress.js\");\nObject.defineProperty(exports, \"publicKeyToAddress\", {\n  enumerable: true,\n  get: function () {\n    return publicKeyToAddress_js_1.publicKeyToAddress;\n  }\n});","map":{"version":3,"names":["parseAccount_js_1","require","Object","defineProperty","exports","enumerable","get","parseAccount","publicKeyToAddress_js_1","publicKeyToAddress"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/accounts.ts"],"sourcesContent":["// Tree-shaking doesn't work well when we import from an index entrypoint. We don't\n// want to bundle libs like `@noble/curves`, etc within the `/accounts` entrypoint\n// as that will dramatically increase bundle size. So we export the modules directly.\nexport { parseAccount } from '../accounts/utils/parseAccount.js'\nexport { publicKeyToAddress } from '../accounts/utils/publicKeyToAddress.js'\n"],"mappings":";;;;;;AAGA,IAAAA,iBAAA,GAAAC,OAAA;AAASC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAN,iBAAA,CAAAO,YAAY;EAAA;AAAA;AACrB,IAAAC,uBAAA,GAAAP,OAAA;AAASC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,uBAAA,CAAAC,kBAAkB;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}