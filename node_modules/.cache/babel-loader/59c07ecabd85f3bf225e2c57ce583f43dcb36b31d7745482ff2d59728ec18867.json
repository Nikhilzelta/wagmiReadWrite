{"ast":null,"code":"import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n  '0x3': 'eip4844'\n};\nexport function formatTransaction(transaction) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber ? BigInt(transaction.blockNumber) : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas ? BigInt(transaction.maxFeePerBlobGas) : undefined,\n    maxFeePerGas: transaction.maxFeePerGas ? BigInt(transaction.maxFeePerGas) : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas ? BigInt(transaction.maxPriorityFeePerGas) : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex ? Number(transaction.transactionIndex) : null,\n    type: transaction.type ? transactionType[transaction.type] : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined\n  };\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity);\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0;\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1;\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0;\n    }\n    return undefined;\n  })();\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList;\n    delete transaction_.maxFeePerBlobGas;\n    delete transaction_.maxFeePerGas;\n    delete transaction_.maxPriorityFeePerGas;\n    delete transaction_.yParity;\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerBlobGas;\n    delete transaction_.maxFeePerGas;\n    delete transaction_.maxPriorityFeePerGas;\n  }\n  if (transaction_.type === 'eip1559') {\n    delete transaction_.maxFeePerBlobGas;\n  }\n  return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/defineFormatter('transaction', formatTransaction);","map":{"version":3,"names":["hexToNumber","defineFormatter","transactionType","formatTransaction","transaction","transaction_","blockHash","blockNumber","BigInt","chainId","undefined","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","transactionIndex","Number","type","typeHex","value","v","yParity","accessList","defineTransaction"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/viem/utils/formatters/transaction.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction, TransactionType } from '../../types/transaction.js'\nimport type { ExactPartial, UnionLooseOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  TChain extends Chain | undefined = undefined,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'transaction'>,\n> = UnionLooseOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_K in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, TBlockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n  '0x3': 'eip4844',\n} as const satisfies Record<Hex, TransactionType>\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: ExactPartial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas\n      ? BigInt(transaction.maxFeePerBlobGas)\n      : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type\n      ? (transactionType as any)[transaction.type]\n      : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  if (transaction_.type === 'eip1559') {\n    delete transaction_.maxFeePerBlobGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}