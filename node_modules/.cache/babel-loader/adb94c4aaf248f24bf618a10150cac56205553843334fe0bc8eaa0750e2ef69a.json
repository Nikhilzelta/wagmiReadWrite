{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recoverAddress = void 0;\nconst publicKeyToAddress_js_1 = require(\"../../accounts/utils/publicKeyToAddress.js\");\nconst recoverPublicKey_js_1 = require(\"./recoverPublicKey.js\");\nasync function recoverAddress({\n  hash,\n  signature\n}) {\n  return (0, publicKeyToAddress_js_1.publicKeyToAddress)(await (0, recoverPublicKey_js_1.recoverPublicKey)({\n    hash: hash,\n    signature\n  }));\n}\nexports.recoverAddress = recoverAddress;","map":{"version":3,"names":["publicKeyToAddress_js_1","require","recoverPublicKey_js_1","recoverAddress","hash","signature","publicKeyToAddress","recoverPublicKey","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/signature/recoverAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray\n}\n\nexport type RecoverAddressReturnType = Address\n\nexport type RecoverAddressErrorType = ErrorType\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash: hash, signature }))\n}\n"],"mappings":";;;;;;AAEA,MAAAA,uBAAA,GAAAC,OAAA;AAIA,MAAAC,qBAAA,GAAAD,OAAA;AAWO,eAAeE,cAAcA,CAAC;EACnCC,IAAI;EACJC;AAAS,CACgB;EACzB,OAAO,IAAAL,uBAAA,CAAAM,kBAAkB,EAAC,MAAM,IAAAJ,qBAAA,CAAAK,gBAAgB,EAAC;IAAEH,IAAI,EAAEA,IAAI;IAAEC;EAAS,CAAE,CAAC,CAAC;AAC9E;AALAG,OAAA,CAAAL,cAAA,GAAAA,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}