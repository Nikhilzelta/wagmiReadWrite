{"ast":null,"code":"import '@tanstack/query-core';\nimport { switchChain } from '../actions/switchChain.js';\nimport '../createConfig.js';\nimport '../types/utils.js';\nexport function switchChainMutationOptions(config) {\n  return {\n    mutationFn(variables) {\n      return switchChain(config, variables);\n    },\n    mutationKey: ['switchChain']\n  };\n}","map":{"version":3,"names":["switchChain","switchChainMutationOptions","config","mutationFn","variables","mutationKey"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/wagmi/node_modules/@wagmi/core/src/query/switchChain.ts"],"sourcesContent":["import { type MutateOptions, type MutationOptions } from '@tanstack/query-core'\n\nimport {\n  type SwitchChainErrorType,\n  type SwitchChainParameters,\n  type SwitchChainReturnType,\n  switchChain,\n} from '../actions/switchChain.js'\nimport { type Config } from '../createConfig.js'\nimport { type Evaluate } from '../types/utils.js'\n\nexport function switchChainMutationOptions<config extends Config>(\n  config: config,\n) {\n  return {\n    mutationFn(variables) {\n      return switchChain(config, variables)\n    },\n    mutationKey: ['switchChain'],\n  } as const satisfies MutationOptions<\n    SwitchChainData<config, config['chains'][number]['id']>,\n    SwitchChainErrorType,\n    SwitchChainVariables<config, config['chains'][number]['id']>\n  >\n}\n\nexport type SwitchChainData<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n> = Evaluate<SwitchChainReturnType<config, chainId>>\n\nexport type SwitchChainVariables<\n  config extends Config,\n  chainId extends config['chains'][number]['id'],\n> = Evaluate<SwitchChainParameters<config, chainId>>\n\nexport type SwitchChainMutate<config extends Config, context = unknown> = <\n  chainId extends config['chains'][number]['id'],\n>(\n  variables: SwitchChainVariables<config, chainId>,\n  options?:\n    | Evaluate<\n        MutateOptions<\n          SwitchChainData<config, chainId>,\n          SwitchChainErrorType,\n          Evaluate<SwitchChainVariables<config, chainId>>,\n          context\n        >\n      >\n    | undefined,\n) => void\n\nexport type SwitchChainMutateAsync<config extends Config, context = unknown> = <\n  chainId extends config['chains'][number]['id'],\n>(\n  variables: SwitchChainVariables<config, chainId>,\n  options?:\n    | Evaluate<\n        MutateOptions<\n          SwitchChainData<config, chainId>,\n          SwitchChainErrorType,\n          Evaluate<SwitchChainVariables<config, chainId>>,\n          context\n        >\n      >\n    | undefined,\n) => Promise<SwitchChainData<config, chainId>>\n"],"mappings":"AAAA,OAAyD,sBAAsB;AAE/E,SAIEA,WAAW,QACN,2BAA2B;AAClC,OAA4B,oBAAoB;AAChD,OAA8B,mBAAmB;AAEjD,OAAM,SAAUC,0BAA0BA,CACxCC,MAAc;EAEd,OAAO;IACLC,UAAUA,CAACC,SAAS;MAClB,OAAOJ,WAAW,CAACE,MAAM,EAAEE,SAAS,CAAC;IACvC,CAAC;IACDC,WAAW,EAAE,CAAC,aAAa;GAK5B;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}