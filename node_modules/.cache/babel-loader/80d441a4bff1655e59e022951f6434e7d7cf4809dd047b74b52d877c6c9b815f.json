{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createTransport = void 0;\nconst buildRequest_js_1 = require(\"../../utils/buildRequest.js\");\nfunction createTransport({\n  key,\n  name,\n  request,\n  retryCount = 3,\n  retryDelay = 150,\n  timeout,\n  type\n}, value) {\n  return {\n    config: {\n      key,\n      name,\n      request,\n      retryCount,\n      retryDelay,\n      timeout,\n      type\n    },\n    request: (0, buildRequest_js_1.buildRequest)(request, {\n      retryCount,\n      retryDelay\n    }),\n    value\n  };\n}\nexports.createTransport = createTransport;","map":{"version":3,"names":["buildRequest_js_1","require","createTransport","key","name","request","retryCount","retryDelay","timeout","type","value","config","buildRequest","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/clients/transports/createTransport.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport { buildRequest } from '../../utils/buildRequest.js'\nimport type { ClientConfig } from '../createClient.js'\n\nexport type TransportConfig<\n  TType extends string = string,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = {\n  /** The name of the transport. */\n  name: string\n  /** The key of the transport. */\n  key: string\n  /** The JSON-RPC request function that matches the EIP-1193 request spec. */\n  request: TEIP1193RequestFn\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number\n  /** The max number of times to retry. */\n  retryCount?: number\n  /** The timeout (in ms) for requests. */\n  timeout?: number\n  /** The type of the transport. */\n  type: TType\n}\n\nexport type Transport<\n  TType extends string = string,\n  TRpcAttributes = Record<string, any>,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = <TChain extends Chain | undefined = Chain>({\n  chain,\n}: {\n  chain?: TChain\n  pollingInterval?: ClientConfig['pollingInterval']\n  retryCount?: TransportConfig['retryCount']\n  timeout?: TransportConfig['timeout']\n}) => {\n  config: TransportConfig<TType>\n  request: TEIP1193RequestFn\n  value?: TRpcAttributes\n}\n\nexport type CreateTransportErrorType = ErrorType\n\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport<\n  TType extends string,\n  TRpcAttributes extends Record<string, any>,\n>(\n  {\n    key,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type,\n  }: TransportConfig<TType>,\n  value?: TRpcAttributes,\n): ReturnType<Transport<TType, TRpcAttributes>> {\n  return {\n    config: { key, name, request, retryCount, retryDelay, timeout, type },\n    request: buildRequest(request, { retryCount, retryDelay }),\n    value,\n  }\n}\n"],"mappings":";;;;;;AAGA,MAAAA,iBAAA,GAAAC,OAAA;AA6CA,SAAgBC,eAAeA,CAI7B;EACEC,GAAG;EACHC,IAAI;EACJC,OAAO;EACPC,UAAU,GAAG,CAAC;EACdC,UAAU,GAAG,GAAG;EAChBC,OAAO;EACPC;AAAI,CACmB,EACzBC,KAAsB;EAEtB,OAAO;IACLC,MAAM,EAAE;MAAER,GAAG;MAAEC,IAAI;MAAEC,OAAO;MAAEC,UAAU;MAAEC,UAAU;MAAEC,OAAO;MAAEC;IAAI,CAAE;IACrEJ,OAAO,EAAE,IAAAL,iBAAA,CAAAY,YAAY,EAACP,OAAO,EAAE;MAAEC,UAAU;MAAEC;IAAU,CAAE,CAAC;IAC1DG;GACD;AACH;AApBAG,OAAA,CAAAX,eAAA,GAAAA,eAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}