{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexToSignature = void 0;\nconst secp256k1_1 = require(\"@noble/curves/secp256k1\");\nconst toHex_js_1 = require(\"../../utils/encoding/toHex.js\");\nfunction hexToSignature(signatureHex) {\n  const {\n    r,\n    s\n  } = secp256k1_1.secp256k1.Signature.fromCompact(signatureHex.slice(2, 130));\n  const v = BigInt(`0x${signatureHex.slice(130)}`);\n  return {\n    r: (0, toHex_js_1.numberToHex)(r, {\n      size: 32\n    }),\n    s: (0, toHex_js_1.numberToHex)(s, {\n      size: 32\n    }),\n    v\n  };\n}\nexports.hexToSignature = hexToSignature;","map":{"version":3,"names":["secp256k1_1","require","toHex_js_1","hexToSignature","signatureHex","r","s","secp256k1","Signature","fromCompact","slice","v","BigInt","numberToHex","size","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/signature/hexToSignature.ts"],"sourcesContent":["import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, Signature } from '../../types/misc.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type HexToSignatureErrorType = NumberToHexErrorType | ErrorType\n\n/**\n * @description Parses a hex formatted signature into a structured signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * hexToSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', s: '0x...', v: 28n }\n */\nexport function hexToSignature(signatureHex: Hex): Signature {\n  const { r, s } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130))\n  const v = BigInt(`0x${signatureHex.slice(130)}`)\n  return { r: numberToHex(r, { size: 32 }), s: numberToHex(s, { size: 32 }), v }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,WAAA,GAAAC,OAAA;AAIA,MAAAC,UAAA,GAAAD,OAAA;AAiBA,SAAgBE,cAAcA,CAACC,YAAiB;EAC9C,MAAM;IAAEC,CAAC;IAAEC;EAAC,CAAE,GAAGN,WAAA,CAAAO,SAAS,CAACC,SAAS,CAACC,WAAW,CAACL,YAAY,CAACM,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;EAC5E,MAAMC,CAAC,GAAGC,MAAM,CAAC,KAAKR,YAAY,CAACM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;EAChD,OAAO;IAAEL,CAAC,EAAE,IAAAH,UAAA,CAAAW,WAAW,EAACR,CAAC,EAAE;MAAES,IAAI,EAAE;IAAE,CAAE,CAAC;IAAER,CAAC,EAAE,IAAAJ,UAAA,CAAAW,WAAW,EAACP,CAAC,EAAE;MAAEQ,IAAI,EAAE;IAAE,CAAE,CAAC;IAAEH;EAAC,CAAE;AAChF;AAJAI,OAAA,CAAAZ,cAAA,GAAAA,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}