{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signatureToCompactSignature = void 0;\nconst index_js_1 = require(\"../index.js\");\nfunction signatureToCompactSignature(signature) {\n  const {\n    r,\n    s,\n    v\n  } = signature;\n  const yParity = v - 27n;\n  let yParityAndS = s;\n  if (yParity === 1n) {\n    const bytes = (0, index_js_1.hexToBytes)(s);\n    bytes[0] |= 0x80;\n    yParityAndS = (0, index_js_1.bytesToHex)(bytes);\n  }\n  return {\n    r,\n    yParityAndS\n  };\n}\nexports.signatureToCompactSignature = signatureToCompactSignature;","map":{"version":3,"names":["index_js_1","require","signatureToCompactSignature","signature","r","s","v","yParity","yParityAndS","bytes","hexToBytes","bytesToHex","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/signature/signatureToCompactSignature.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Signature } from '../../types/misc.js'\nimport {\n  type BytesToHexErrorType,\n  type HexToBytesErrorType,\n  bytesToHex,\n  hexToBytes,\n} from '../index.js'\n\nexport type SignatureToCompactSignatureErrorType =\n  | HexToBytesErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\n/**\n * @description Converts a signature into an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098).\n *\n * @param signature The signature to convert.\n * @returns The signature in compact format.\n *\n * @example\n * signatureToCompactSignature({\n *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   s: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n *   v: 27n\n * })\n * // {\n * //   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n * //   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064'\n * // }\n */\nexport function signatureToCompactSignature(\n  signature: Signature,\n): CompactSignature {\n  const { r, s, v } = signature\n  const yParity = v - 27n\n  let yParityAndS = s\n  if (yParity === 1n) {\n    const bytes = hexToBytes(s)\n    bytes[0] |= 0x80\n    yParityAndS = bytesToHex(bytes)\n  }\n  return { r, yParityAndS }\n}\n"],"mappings":";;;;;;AAEA,MAAAA,UAAA,GAAAC,OAAA;AA6BA,SAAgBC,2BAA2BA,CACzCC,SAAoB;EAEpB,MAAM;IAAEC,CAAC;IAAEC,CAAC;IAAEC;EAAC,CAAE,GAAGH,SAAS;EAC7B,MAAMI,OAAO,GAAGD,CAAC,GAAG,GAAG;EACvB,IAAIE,WAAW,GAAGH,CAAC;EACnB,IAAIE,OAAO,KAAK,EAAE,EAAE;IAClB,MAAME,KAAK,GAAG,IAAAT,UAAA,CAAAU,UAAU,EAACL,CAAC,CAAC;IAC3BI,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI;IAChBD,WAAW,GAAG,IAAAR,UAAA,CAAAW,UAAU,EAACF,KAAK,CAAC;;EAEjC,OAAO;IAAEL,CAAC;IAAEI;EAAW,CAAE;AAC3B;AAZAI,OAAA,CAAAV,2BAAA,GAAAA,2BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}