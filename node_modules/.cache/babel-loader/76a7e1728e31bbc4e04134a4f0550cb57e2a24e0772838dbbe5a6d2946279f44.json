{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertRequest = void 0;\nconst parseAccount_js_1 = require(\"../../accounts/utils/parseAccount.js\");\nconst address_js_1 = require(\"../../errors/address.js\");\nconst node_js_1 = require(\"../../errors/node.js\");\nconst transaction_js_1 = require(\"../../errors/transaction.js\");\nconst isAddress_js_1 = require(\"../address/isAddress.js\");\nfunction assertRequest(args) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to\n  } = args;\n  const account = account_ ? (0, parseAccount_js_1.parseAccount)(account_) : undefined;\n  if (account && !(0, isAddress_js_1.isAddress)(account.address)) throw new address_js_1.InvalidAddressError({\n    address: account.address\n  });\n  if (to && !(0, isAddress_js_1.isAddress)(to)) throw new address_js_1.InvalidAddressError({\n    address: to\n  });\n  if (typeof gasPrice !== 'undefined' && (typeof maxFeePerGas !== 'undefined' || typeof maxPriorityFeePerGas !== 'undefined')) throw new transaction_js_1.FeeConflictError();\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n) throw new node_js_1.FeeCapTooHighError({\n    maxFeePerGas\n  });\n  if (maxPriorityFeePerGas && maxFeePerGas && maxPriorityFeePerGas > maxFeePerGas) throw new node_js_1.TipAboveFeeCapError({\n    maxFeePerGas,\n    maxPriorityFeePerGas\n  });\n}\nexports.assertRequest = assertRequest;","map":{"version":3,"names":["parseAccount_js_1","require","address_js_1","node_js_1","transaction_js_1","isAddress_js_1","assertRequest","args","account","account_","gasPrice","maxFeePerGas","maxPriorityFeePerGas","to","parseAccount","undefined","isAddress","address","InvalidAddressError","FeeConflictError","FeeCapTooHighError","TipAboveFeeCapError","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/transaction/assertRequest.ts"],"sourcesContent":["import {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type AssertRequestParameters = Partial<SendTransactionParameters<Chain>>\n\nexport type AssertRequestErrorType =\n  | InvalidAddressErrorType\n  | FeeConflictErrorType\n  | FeeCapTooHighErrorType\n  | ParseAccountErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertRequest(args: AssertRequestParameters) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n  if (account && !isAddress(account.address))\n    throw new InvalidAddressError({ address: account.address })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (\n    typeof gasPrice !== 'undefined' &&\n    (typeof maxFeePerGas !== 'undefined' ||\n      typeof maxPriorityFeePerGas !== 'undefined')\n  )\n    throw new FeeConflictError()\n\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n"],"mappings":";;;;;;AAAA,MAAAA,iBAAA,GAAAC,OAAA;AAKA,MAAAC,YAAA,GAAAD,OAAA;AAIA,MAAAE,SAAA,GAAAF,OAAA;AAMA,MAAAG,gBAAA,GAAAH,OAAA;AAMA,MAAAI,cAAA,GAAAJ,OAAA;AAYA,SAAgBK,aAAaA,CAACC,IAA6B;EACzD,MAAM;IACJC,OAAO,EAAEC,QAAQ;IACjBC,QAAQ;IACRC,YAAY;IACZC,oBAAoB;IACpBC;EAAE,CACH,GAAGN,IAAI;EACR,MAAMC,OAAO,GAAGC,QAAQ,GAAG,IAAAT,iBAAA,CAAAc,YAAY,EAACL,QAAQ,CAAC,GAAGM,SAAS;EAC7D,IAAIP,OAAO,IAAI,CAAC,IAAAH,cAAA,CAAAW,SAAS,EAACR,OAAO,CAACS,OAAO,CAAC,EACxC,MAAM,IAAIf,YAAA,CAAAgB,mBAAmB,CAAC;IAAED,OAAO,EAAET,OAAO,CAACS;EAAO,CAAE,CAAC;EAC7D,IAAIJ,EAAE,IAAI,CAAC,IAAAR,cAAA,CAAAW,SAAS,EAACH,EAAE,CAAC,EAAE,MAAM,IAAIX,YAAA,CAAAgB,mBAAmB,CAAC;IAAED,OAAO,EAAEJ;EAAE,CAAE,CAAC;EACxE,IACE,OAAOH,QAAQ,KAAK,WAAW,KAC9B,OAAOC,YAAY,KAAK,WAAW,IAClC,OAAOC,oBAAoB,KAAK,WAAW,CAAC,EAE9C,MAAM,IAAIR,gBAAA,CAAAe,gBAAgB,EAAE;EAE9B,IAAIR,YAAY,IAAIA,YAAY,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,EAChD,MAAM,IAAIR,SAAA,CAAAiB,kBAAkB,CAAC;IAAET;EAAY,CAAE,CAAC;EAChD,IACEC,oBAAoB,IACpBD,YAAY,IACZC,oBAAoB,GAAGD,YAAY,EAEnC,MAAM,IAAIR,SAAA,CAAAkB,mBAAmB,CAAC;IAAEV,YAAY;IAAEC;EAAoB,CAAE,CAAC;AACzE;AA3BAU,OAAA,CAAAhB,aAAA,GAAAA,aAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}