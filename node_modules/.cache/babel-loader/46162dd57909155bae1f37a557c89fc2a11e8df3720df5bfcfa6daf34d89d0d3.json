{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport ReadContract from './readContract';\nimport { WagmiProvider } from 'wagmi';\nimport { config } from './config';\nimport WriteContract from './writeContract';\nimport { useAccount, useConnect, useDisconnect } from 'wagmi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nfunction App() {\n  _s();\n  const account = useAccount();\n  const {\n    connectors,\n    connect,\n    status,\n    error\n  } = useConnect();\n  const {\n    disconnect\n  } = useDisconnect();\n  return /*#__PURE__*/_jsxDEV(WagmiProvider, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"status: \", account.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), \"addresses: \", JSON.stringify(account.addresses), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), \"chainId: \", account.chainId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), account.status === 'connected' && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => disconnect(),\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), connectors.map(connector => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => connect({\n            connector\n          }),\n          type: \"button\",\n          children: connector.name\n        }, connector.uid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReadContract, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WriteContract, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L1sQ5xsy4QIy4NAUAtyu6SGSeEY=\", false, function () {\n  return [useAccount, useConnect, useDisconnect];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["QueryClient","QueryClientProvider","ReadContract","WagmiProvider","config","WriteContract","useAccount","useConnect","useDisconnect","jsxDEV","_jsxDEV","queryClient","App","_s","account","connectors","connect","status","error","disconnect","children","client","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","addresses","chainId","type","onClick","map","connector","name","uid","_c","$RefreshReg$"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/src/App.js"],"sourcesContent":["\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport ReadContract from './readContract';\nimport { WagmiProvider } from 'wagmi'\nimport { config } from './config'\nimport WriteContract from './writeContract';\nimport { useAccount, useConnect, useDisconnect } from 'wagmi'\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  const account = useAccount()\n  const { connectors, connect, status, error } = useConnect()\n  const { disconnect } = useDisconnect()\n  return (\n    <WagmiProvider config={config}>\n      <QueryClientProvider client={queryClient}>\n\n        <div>\n          <h2>Account</h2>\n\n          <div>\n            status: {account.status}\n            <br />\n            addresses: {JSON.stringify(account.addresses)}\n            <br />\n            chainId: {account.chainId}\n          </div>\n\n          {account.status === 'connected' && (\n            <button type=\"button\" onClick={() => disconnect()}>\n              Disconnect\n            </button>\n          )}\n        </div>\n\n        <div>\n          <h2>Connect</h2>\n          {connectors.map((connector) => (\n            <button\n              key={connector.uid}\n              onClick={() => connect({ connector })}\n              type=\"button\"\n            >\n              {connector.name}\n            </button>\n          ))}\n          <div>{status}</div>\n        </div>\n\n        <ReadContract />\n        <WriteContract />\n      </QueryClientProvider>\n    </WagmiProvider>\n  )\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}