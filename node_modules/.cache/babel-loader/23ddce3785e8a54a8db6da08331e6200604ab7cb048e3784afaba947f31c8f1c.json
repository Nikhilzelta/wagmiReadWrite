{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCursor = void 0;\nconst cursor_js_1 = require(\"../errors/cursor.js\");\nconst staticCursor = {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1) throw new cursor_js_1.PositionOutOfBoundsError({\n      length: this.bytes.length,\n      position\n    });\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new cursor_js_1.NegativeOffsetError({\n      offset\n    });\n    const position = this.position - offset;\n    this.assertPosition(position);\n    this.position = position;\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new cursor_js_1.NegativeOffsetError({\n      offset\n    });\n    const position = this.position + offset;\n    this.assertPosition(position);\n    this.position = position;\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position;\n    this.assertPosition(position);\n    return this.bytes[position];\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position;\n    this.assertPosition(position + length - 1);\n    return this.bytes.subarray(position, position + length);\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position;\n    this.assertPosition(position);\n    return this.bytes[position];\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position;\n    this.assertPosition(position + 1);\n    return this.dataView.getUint16(position);\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position;\n    this.assertPosition(position + 2);\n    return (this.dataView.getUint16(position) << 8) + this.dataView.getUint8(position + 2);\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position;\n    this.assertPosition(position + 3);\n    return this.dataView.getUint32(position);\n  },\n  pushByte(byte) {\n    this.assertPosition(this.position);\n    this.bytes[this.position] = byte;\n    this.position++;\n  },\n  pushBytes(bytes) {\n    this.assertPosition(this.position + bytes.length - 1);\n    this.bytes.set(bytes, this.position);\n    this.position += bytes.length;\n  },\n  pushUint8(value) {\n    this.assertPosition(this.position);\n    this.bytes[this.position] = value;\n    this.position++;\n  },\n  pushUint16(value) {\n    this.assertPosition(this.position + 1);\n    this.dataView.setUint16(this.position, value);\n    this.position += 2;\n  },\n  pushUint24(value) {\n    this.assertPosition(this.position + 2);\n    this.dataView.setUint16(this.position, value >> 8);\n    this.dataView.setUint8(this.position + 2, value & ~4294967040);\n    this.position += 3;\n  },\n  pushUint32(value) {\n    this.assertPosition(this.position + 3);\n    this.dataView.setUint32(this.position, value);\n    this.position += 4;\n  },\n  readByte() {\n    const value = this.inspectByte();\n    this.position++;\n    return value;\n  },\n  readBytes(length) {\n    const value = this.inspectBytes(length);\n    this.position += length;\n    return value;\n  },\n  readUint8() {\n    const value = this.inspectUint8();\n    this.position += 1;\n    return value;\n  },\n  readUint16() {\n    const value = this.inspectUint16();\n    this.position += 2;\n    return value;\n  },\n  readUint24() {\n    const value = this.inspectUint24();\n    this.position += 3;\n    return value;\n  },\n  readUint32() {\n    const value = this.inspectUint32();\n    this.position += 4;\n    return value;\n  },\n  setPosition(position) {\n    this.assertPosition(position);\n    this.position = position;\n  }\n};\nfunction createCursor(bytes) {\n  const cursor = Object.create(staticCursor);\n  cursor.bytes = bytes;\n  cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  return cursor;\n}\nexports.createCursor = createCursor;","map":{"version":3,"names":["cursor_js_1","require","staticCursor","bytes","Uint8Array","dataView","DataView","ArrayBuffer","position","assertPosition","length","PositionOutOfBoundsError","decrementPosition","offset","NegativeOffsetError","incrementPosition","inspectByte","position_","inspectBytes","subarray","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","set","pushUint8","value","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","readBytes","readUint8","readUint16","readUint24","readUint32","setPosition","createCursor","cursor","Object","create","buffer","byteOffset","byteLength","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/cursor.ts"],"sourcesContent":["import {\n  NegativeOffsetError,\n  PositionOutOfBoundsError,\n} from '../errors/cursor.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ByteArray } from '../types/misc.js'\n\nexport type Cursor = {\n  bytes: ByteArray\n  dataView: DataView\n  position: number\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): ByteArray[number]\n  inspectBytes(length: number, position?: number): ByteArray\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: ByteArray[number]): void\n  pushBytes(bytes: ByteArray): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): ByteArray[number]\n  readBytes(length: number): ByteArray\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): void\n}\n\nexport type CreateCursorErrorType = ErrorType\n\nexport type CursorErrorType =\n  | CursorAssertPositionErrorType\n  | CursorDecrementPositionErrorType\n  | CursorIncrementPositionErrorType\n  | ErrorType\n\nexport type CursorAssertPositionErrorType = PositionOutOfBoundsError | ErrorType\n\nexport type CursorDecrementPositionErrorType = NegativeOffsetError | ErrorType\n\nexport type CursorIncrementPositionErrorType = NegativeOffsetError | ErrorType\n\nconst staticCursor: Cursor = {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: ByteArray[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: ByteArray) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length) {\n    const value = this.inspectBytes(length)\n    this.position += length\n    return value\n  },\n  readUint8() {\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  setPosition(position) {\n    this.assertPosition(position)\n    this.position = position\n  },\n}\n\nexport function createCursor(bytes: ByteArray): Cursor {\n  const cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  return cursor\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}