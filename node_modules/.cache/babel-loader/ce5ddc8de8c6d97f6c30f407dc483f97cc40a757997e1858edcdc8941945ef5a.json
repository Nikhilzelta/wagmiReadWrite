{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatEther = void 0;\nconst unit_js_1 = require(\"../../constants/unit.js\");\nconst formatUnits_js_1 = require(\"./formatUnits.js\");\nfunction formatEther(wei, unit = 'wei') {\n  return (0, formatUnits_js_1.formatUnits)(wei, unit_js_1.etherUnits[unit]);\n}\nexports.formatEther = formatEther;","map":{"version":3,"names":["unit_js_1","require","formatUnits_js_1","formatEther","wei","unit","formatUnits","etherUnits","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/unit/formatEther.ts"],"sourcesContent":["import { etherUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatEtherErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of ether.\n *\n * - Docs: https://viem.sh/docs/utilities/formatEther.html\n *\n * @example\n * import { formatEther } from 'viem'\n *\n * formatEther(1000000000000000000n)\n * // '1'\n */\nexport function formatEther(wei: bigint, unit: 'wei' | 'gwei' = 'wei') {\n  return formatUnits(wei, etherUnits[unit])\n}\n"],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AAEA,MAAAC,gBAAA,GAAAD,OAAA;AAeA,SAAgBE,WAAWA,CAACC,GAAW,EAAEC,IAAA,GAAuB,KAAK;EACnE,OAAO,IAAAH,gBAAA,CAAAI,WAAW,EAACF,GAAG,EAAEJ,SAAA,CAAAO,UAAU,CAACF,IAAI,CAAC,CAAC;AAC3C;AAFAG,OAAA,CAAAL,WAAA,GAAAA,WAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}