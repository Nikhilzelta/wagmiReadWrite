{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ccipFetch = exports.offchainLookup = exports.offchainLookupAbiItem = exports.offchainLookupSignature = void 0;\nconst call_js_1 = require(\"../actions/public/call.js\");\nconst ccip_js_1 = require(\"../errors/ccip.js\");\nconst request_js_1 = require(\"../errors/request.js\");\nconst decodeErrorResult_js_1 = require(\"./abi/decodeErrorResult.js\");\nconst encodeAbiParameters_js_1 = require(\"./abi/encodeAbiParameters.js\");\nconst isAddressEqual_js_1 = require(\"./address/isAddressEqual.js\");\nconst concat_js_1 = require(\"./data/concat.js\");\nconst isHex_js_1 = require(\"./data/isHex.js\");\nconst stringify_js_1 = require(\"./stringify.js\");\nexports.offchainLookupSignature = '0x556f1830';\nexports.offchainLookupAbiItem = {\n  name: 'OffchainLookup',\n  type: 'error',\n  inputs: [{\n    name: 'sender',\n    type: 'address'\n  }, {\n    name: 'urls',\n    type: 'string[]'\n  }, {\n    name: 'callData',\n    type: 'bytes'\n  }, {\n    name: 'callbackFunction',\n    type: 'bytes4'\n  }, {\n    name: 'extraData',\n    type: 'bytes'\n  }]\n};\nasync function offchainLookup(client, {\n  blockNumber,\n  blockTag,\n  data,\n  to\n}) {\n  const {\n    args\n  } = (0, decodeErrorResult_js_1.decodeErrorResult)({\n    data,\n    abi: [exports.offchainLookupAbiItem]\n  });\n  const [sender, urls, callData, callbackSelector, extraData] = args;\n  try {\n    if (!(0, isAddressEqual_js_1.isAddressEqual)(to, sender)) throw new ccip_js_1.OffchainLookupSenderMismatchError({\n      sender,\n      to\n    });\n    const result = await ccipFetch({\n      data: callData,\n      sender,\n      urls\n    });\n    const {\n      data: data_\n    } = await (0, call_js_1.call)(client, {\n      blockNumber,\n      blockTag,\n      data: (0, concat_js_1.concat)([callbackSelector, (0, encodeAbiParameters_js_1.encodeAbiParameters)([{\n        type: 'bytes'\n      }, {\n        type: 'bytes'\n      }], [result, extraData])]),\n      to\n    });\n    return data_;\n  } catch (err) {\n    throw new ccip_js_1.OffchainLookupError({\n      callbackSelector,\n      cause: err,\n      data,\n      extraData,\n      sender,\n      urls\n    });\n  }\n}\nexports.offchainLookup = offchainLookup;\nasync function ccipFetch({\n  data,\n  sender,\n  urls\n}) {\n  let error = new Error('An unknown error occurred.');\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i];\n    const method = url.includes('{data}') ? 'GET' : 'POST';\n    const body = method === 'POST' ? {\n      data,\n      sender\n    } : undefined;\n    try {\n      const response = await fetch(url.replace('{sender}', sender).replace('{data}', data), {\n        body: JSON.stringify(body),\n        method\n      });\n      let result;\n      if (response.headers.get('Content-Type')?.startsWith('application/json')) {\n        result = (await response.json()).data;\n      } else {\n        result = await response.text();\n      }\n      if (!response.ok) {\n        error = new request_js_1.HttpRequestError({\n          body,\n          details: result?.error ? (0, stringify_js_1.stringify)(result.error) : response.statusText,\n          headers: response.headers,\n          status: response.status,\n          url\n        });\n        continue;\n      }\n      if (!(0, isHex_js_1.isHex)(result)) {\n        error = new ccip_js_1.OffchainLookupResponseMalformedError({\n          result,\n          url\n        });\n        continue;\n      }\n      return result;\n    } catch (err) {\n      error = new request_js_1.HttpRequestError({\n        body,\n        details: err.message,\n        url\n      });\n    }\n  }\n  throw error;\n}\nexports.ccipFetch = ccipFetch;","map":{"version":3,"names":["call_js_1","require","ccip_js_1","request_js_1","decodeErrorResult_js_1","encodeAbiParameters_js_1","isAddressEqual_js_1","concat_js_1","isHex_js_1","stringify_js_1","exports","offchainLookupSignature","offchainLookupAbiItem","name","type","inputs","offchainLookup","client","blockNumber","blockTag","data","to","args","decodeErrorResult","abi","sender","urls","callData","callbackSelector","extraData","isAddressEqual","OffchainLookupSenderMismatchError","result","ccipFetch","data_","call","concat","encodeAbiParameters","err","OffchainLookupError","cause","error","Error","i","length","url","method","includes","body","undefined","response","fetch","replace","JSON","stringify","headers","get","startsWith","json","text","ok","HttpRequestError","details","statusText","status","isHex","OffchainLookupResponseMalformedError","message"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/ccip.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport { type CallParameters, call } from '../actions/public/call.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport { type BaseError } from '../errors/base.js'\nimport {\n  OffchainLookupError,\n  OffchainLookupResponseMalformedError,\n  OffchainLookupSenderMismatchError,\n} from '../errors/ccip.js'\nimport { HttpRequestError } from '../errors/request.js'\nimport type { Chain } from '../types/chain.js'\nimport type { GetErrorArgs } from '../types/contract.js'\nimport type { Hex } from '../types/misc.js'\n\nimport type { Client } from '../clients/createClient.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport { decodeErrorResult } from './abi/decodeErrorResult.js'\nimport { encodeAbiParameters } from './abi/encodeAbiParameters.js'\nimport { isAddressEqual } from './address/isAddressEqual.js'\nimport { concat } from './data/concat.js'\nimport { isHex } from './data/isHex.js'\nimport { stringify } from './stringify.js'\n\nexport const offchainLookupSignature = '0x556f1830'\nexport const offchainLookupAbiItem = {\n  name: 'OffchainLookup',\n  type: 'error',\n  inputs: [\n    {\n      name: 'sender',\n      type: 'address',\n    },\n    {\n      name: 'urls',\n      type: 'string[]',\n    },\n    {\n      name: 'callData',\n      type: 'bytes',\n    },\n    {\n      name: 'callbackFunction',\n      type: 'bytes4',\n    },\n    {\n      name: 'extraData',\n      type: 'bytes',\n    },\n  ],\n} as const satisfies Abi[number]\n\nexport type OffchainLookupErrorType = ErrorType\n\nexport async function offchainLookup<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    data,\n    to,\n  }: Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n    data: Hex\n    to: Address\n  },\n): Promise<Hex> {\n  const { args } = decodeErrorResult({\n    data,\n    abi: [offchainLookupAbiItem],\n  }) as unknown as GetErrorArgs<\n    [typeof offchainLookupAbiItem],\n    'OffchainLookup'\n  >\n  const [sender, urls, callData, callbackSelector, extraData] = args\n\n  try {\n    if (!isAddressEqual(to, sender))\n      throw new OffchainLookupSenderMismatchError({ sender, to })\n\n    const result = await ccipFetch({ data: callData, sender, urls })\n\n    const { data: data_ } = await call(client, {\n      blockNumber,\n      blockTag,\n      data: concat([\n        callbackSelector,\n        encodeAbiParameters(\n          [{ type: 'bytes' }, { type: 'bytes' }],\n          [result, extraData],\n        ),\n      ]),\n      to,\n    } as CallParameters)\n\n    return data_!\n  } catch (err) {\n    throw new OffchainLookupError({\n      callbackSelector,\n      cause: err as BaseError,\n      data,\n      extraData,\n      sender,\n      urls,\n    })\n  }\n}\n\nexport type CcipFetchErrorType = ErrorType\n\nexport async function ccipFetch({\n  data,\n  sender,\n  urls,\n}: { data: Hex; sender: Address; urls: readonly string[] }) {\n  let error = new Error('An unknown error occurred.')\n\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const method = url.includes('{data}') ? 'GET' : 'POST'\n    const body = method === 'POST' ? { data, sender } : undefined\n\n    try {\n      const response = await fetch(\n        url.replace('{sender}', sender).replace('{data}', data),\n        {\n          body: JSON.stringify(body),\n          method,\n        },\n      )\n\n      let result\n      if (\n        response.headers.get('Content-Type')?.startsWith('application/json')\n      ) {\n        result = (await response.json()).data\n      } else {\n        result = (await response.text()) as any\n      }\n\n      if (!response.ok) {\n        error = new HttpRequestError({\n          body,\n          details: result?.error\n            ? stringify(result.error)\n            : response.statusText,\n          headers: response.headers,\n          status: response.status,\n          url,\n        })\n        continue\n      }\n\n      if (!isHex(result)) {\n        error = new OffchainLookupResponseMalformedError({\n          result,\n          url,\n        })\n        continue\n      }\n\n      return result\n    } catch (err) {\n      error = new HttpRequestError({\n        body,\n        details: (err as Error).message,\n        url,\n      })\n    }\n  }\n\n  throw error\n}\n"],"mappings":";;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AAGA,MAAAC,SAAA,GAAAD,OAAA;AAKA,MAAAE,YAAA,GAAAF,OAAA;AAOA,MAAAG,sBAAA,GAAAH,OAAA;AACA,MAAAI,wBAAA,GAAAJ,OAAA;AACA,MAAAK,mBAAA,GAAAL,OAAA;AACA,MAAAM,WAAA,GAAAN,OAAA;AACA,MAAAO,UAAA,GAAAP,OAAA;AACA,MAAAQ,cAAA,GAAAR,OAAA;AAEaS,OAAA,CAAAC,uBAAuB,GAAG,YAAY;AACtCD,OAAA,CAAAE,qBAAqB,GAAG;EACnCC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE,CACN;IACEF,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;GACP,EACD;IACED,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;GACP,EACD;IACED,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;GACP,EACD;IACED,IAAI,EAAE,kBAAkB;IACxBC,IAAI,EAAE;GACP,EACD;IACED,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE;GACP;CAE2B;AAIzB,eAAeE,cAAcA,CAClCC,MAAiC,EACjC;EACEC,WAAW;EACXC,QAAQ;EACRC,IAAI;EACJC;AAAE,CAIH;EAED,MAAM;IAAEC;EAAI,CAAE,GAAG,IAAAlB,sBAAA,CAAAmB,iBAAiB,EAAC;IACjCH,IAAI;IACJI,GAAG,EAAE,CAACd,OAAA,CAAAE,qBAAqB;GAC5B,CAGA;EACD,MAAM,CAACa,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,gBAAgB,EAAEC,SAAS,CAAC,GAAGP,IAAI;EAElE,IAAI;IACF,IAAI,CAAC,IAAAhB,mBAAA,CAAAwB,cAAc,EAACT,EAAE,EAAEI,MAAM,CAAC,EAC7B,MAAM,IAAIvB,SAAA,CAAA6B,iCAAiC,CAAC;MAAEN,MAAM;MAAEJ;IAAE,CAAE,CAAC;IAE7D,MAAMW,MAAM,GAAG,MAAMC,SAAS,CAAC;MAAEb,IAAI,EAAEO,QAAQ;MAAEF,MAAM;MAAEC;IAAI,CAAE,CAAC;IAEhE,MAAM;MAAEN,IAAI,EAAEc;IAAK,CAAE,GAAG,MAAM,IAAAlC,SAAA,CAAAmC,IAAI,EAAClB,MAAM,EAAE;MACzCC,WAAW;MACXC,QAAQ;MACRC,IAAI,EAAE,IAAAb,WAAA,CAAA6B,MAAM,EAAC,CACXR,gBAAgB,EAChB,IAAAvB,wBAAA,CAAAgC,mBAAmB,EACjB,CAAC;QAAEvB,IAAI,EAAE;MAAO,CAAE,EAAE;QAAEA,IAAI,EAAE;MAAO,CAAE,CAAC,EACtC,CAACkB,MAAM,EAAEH,SAAS,CAAC,CACpB,CACF,CAAC;MACFR;KACiB,CAAC;IAEpB,OAAOa,KAAM;GACd,CAAC,OAAOI,GAAG,EAAE;IACZ,MAAM,IAAIpC,SAAA,CAAAqC,mBAAmB,CAAC;MAC5BX,gBAAgB;MAChBY,KAAK,EAAEF,GAAgB;MACvBlB,IAAI;MACJS,SAAS;MACTJ,MAAM;MACNC;KACD,CAAC;;AAEN;AAnDAhB,OAAA,CAAAM,cAAA,GAAAA,cAAA;AAuDO,eAAeiB,SAASA,CAAC;EAC9Bb,IAAI;EACJK,MAAM;EACNC;AAAI,CACoD;EACxD,IAAIe,KAAK,GAAG,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAEnD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,IAAI,CAACkB,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAME,GAAG,GAAGnB,IAAI,CAACiB,CAAC,CAAC;IACnB,MAAMG,MAAM,GAAGD,GAAG,CAACE,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,MAAM;IACtD,MAAMC,IAAI,GAAGF,MAAM,KAAK,MAAM,GAAG;MAAE1B,IAAI;MAAEK;IAAM,CAAE,GAAGwB,SAAS;IAE7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BN,GAAG,CAACO,OAAO,CAAC,UAAU,EAAE3B,MAAM,CAAC,CAAC2B,OAAO,CAAC,QAAQ,EAAEhC,IAAI,CAAC,EACvD;QACE4B,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;QAC1BF;OACD,CACF;MAED,IAAId,MAAM;MACV,IACEkB,QAAQ,CAACK,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,EAAEC,UAAU,CAAC,kBAAkB,CAAC,EACpE;QACAzB,MAAM,GAAG,CAAC,MAAMkB,QAAQ,CAACQ,IAAI,EAAE,EAAEtC,IAAI;OACtC,MAAM;QACLY,MAAM,GAAI,MAAMkB,QAAQ,CAACS,IAAI,EAAU;;MAGzC,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QAChBnB,KAAK,GAAG,IAAItC,YAAA,CAAA0D,gBAAgB,CAAC;UAC3Bb,IAAI;UACJc,OAAO,EAAE9B,MAAM,EAAES,KAAK,GAClB,IAAAhC,cAAA,CAAA6C,SAAS,EAACtB,MAAM,CAACS,KAAK,CAAC,GACvBS,QAAQ,CAACa,UAAU;UACvBR,OAAO,EAAEL,QAAQ,CAACK,OAAO;UACzBS,MAAM,EAAEd,QAAQ,CAACc,MAAM;UACvBnB;SACD,CAAC;QACF;;MAGF,IAAI,CAAC,IAAArC,UAAA,CAAAyD,KAAK,EAACjC,MAAM,CAAC,EAAE;QAClBS,KAAK,GAAG,IAAIvC,SAAA,CAAAgE,oCAAoC,CAAC;UAC/ClC,MAAM;UACNa;SACD,CAAC;QACF;;MAGF,OAAOb,MAAM;KACd,CAAC,OAAOM,GAAG,EAAE;MACZG,KAAK,GAAG,IAAItC,YAAA,CAAA0D,gBAAgB,CAAC;QAC3Bb,IAAI;QACJc,OAAO,EAAGxB,GAAa,CAAC6B,OAAO;QAC/BtB;OACD,CAAC;;;EAIN,MAAMJ,KAAK;AACb;AA9DA/B,OAAA,CAAAuB,SAAA,GAAAA,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}