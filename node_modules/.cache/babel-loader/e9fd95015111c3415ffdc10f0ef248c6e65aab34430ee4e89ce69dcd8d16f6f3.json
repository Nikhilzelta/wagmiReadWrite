{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { SendTransaction } from './SendTransaction';\nimport ReadContract from './readContract';\nimport WriteContract from './writeContract';\nimport { useAccount, useConnect, useDisconnect } from 'wagmi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const account = useAccount();\n  const {\n    connectors,\n    connect,\n    status,\n    error,\n    isConnected\n  } = useConnect();\n  const {\n    disconnect\n  } = useDisconnect();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"status: \", account.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), \"addresses: \", JSON.stringify(account.addresses), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \"chainId: \", account.chainId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), account.status === 'connected' && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => disconnect(),\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), connectors && connectors.length > 0 && connectors.map(connector => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => connect({\n          connector\n        }),\n        type: \"button\",\n        children: connector.name\n      }, connector.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), console.log(isConnected, connectors, account.status), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendTransaction, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReadContract, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), account.status === 'connected' && /*#__PURE__*/_jsxDEV(WriteContract, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"j5QLpefL/GgtPYbB+hs+2RxYrCU=\", false, function () {\n  return [useAccount, useConnect, useDisconnect];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SendTransaction","ReadContract","WriteContract","useAccount","useConnect","useDisconnect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","connectors","connect","status","error","isConnected","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","addresses","chainId","type","onClick","length","map","connector","name","uid","console","log","_c","$RefreshReg$"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/src/App.js"],"sourcesContent":["\nimport { SendTransaction } from './SendTransaction';\nimport ReadContract from './readContract';\nimport WriteContract from './writeContract';\nimport { useAccount, useConnect, useDisconnect } from 'wagmi'\n\n\nfunction App() {\n  const account = useAccount()\n  const { connectors, connect, status, error, isConnected } = useConnect()\n  const { disconnect } = useDisconnect()\n  return (\n    <>\n      <div>\n        <h2>Account</h2>\n\n        <div>\n          status: {account.status}\n          <br />\n          addresses: {JSON.stringify(account.addresses)}\n          <br />\n          chainId: {account.chainId}\n        </div>\n\n        {account.status === 'connected' && (\n          <button type=\"button\" onClick={() => disconnect()}>\n            Disconnect\n          </button>\n        )}\n      </div>\n\n      <div>\n        <h2>Connect</h2>\n        {connectors && connectors.length > 0 && connectors.map((connector) => (\n          <button\n            key={connector.uid}\n            onClick={() => connect({ connector })}\n            type=\"button\"\n          >\n            {connector.name}\n          </button>\n        ))}\n        {console.log(isConnected, connectors, account.status)}\n        <div>{status}</div>\n        <div>{error}</div>\n      </div>\n      <SendTransaction />\n      <ReadContract />\n      {account.status === 'connected' && <WriteContract />}\n    </>\n\n  )\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}