{"ast":null,"code":"import { connect } from '../actions/connect.js';\nimport '../createConfig.js';\nexport function connectMutationOptions(config) {\n  return {\n    mutationFn(variables) {\n      return connect(config, variables);\n    },\n    mutationKey: ['connect']\n  };\n}","map":{"version":3,"names":["connect","connectMutationOptions","config","mutationFn","variables","mutationKey"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@wagmi/core/src/query/connect.ts"],"sourcesContent":["import type { MutationOptions } from '@tanstack/query-core'\n\nimport {\n  type ConnectErrorType,\n  type ConnectParameters,\n  type ConnectReturnType,\n  connect,\n} from '../actions/connect.js'\nimport { type Config } from '../createConfig.js'\n\nimport type { Mutate, MutateAsync } from './types.js'\n\nexport function connectMutationOptions<config extends Config>(config: config) {\n  return {\n    mutationFn(variables) {\n      return connect(config, variables)\n    },\n    mutationKey: ['connect'],\n  } as const satisfies MutationOptions<\n    ConnectData<config>,\n    ConnectErrorType,\n    ConnectVariables<config>\n  >\n}\n\nexport type ConnectData<config extends Config> = ConnectReturnType<config>\n\nexport type ConnectVariables<config extends Config> = ConnectParameters<config>\n\nexport type ConnectMutate<config extends Config, context = unknown> = Mutate<\n  ConnectData<config>,\n  ConnectErrorType,\n  ConnectVariables<config>,\n  context\n>\n\nexport type ConnectMutateAsync<\n  config extends Config,\n  context = unknown,\n> = MutateAsync<\n  ConnectData<config>,\n  ConnectErrorType,\n  ConnectVariables<config>,\n  context\n>\n"],"mappings":"AAEA,SAIEA,OAAO,QACF,uBAAuB;AAC9B,OAA4B,oBAAoB;AAIhD,OAAM,SAAUC,sBAAsBA,CAAwBC,MAAc;EAC1E,OAAO;IACLC,UAAUA,CAACC,SAAS;MAClB,OAAOJ,OAAO,CAACE,MAAM,EAAEE,SAAS,CAAC;IACnC,CAAC;IACDC,WAAW,EAAE,CAAC,SAAS;GAKxB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}