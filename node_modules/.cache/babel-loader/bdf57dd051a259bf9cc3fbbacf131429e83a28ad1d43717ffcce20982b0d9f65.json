{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTransactionReceipt = void 0;\nconst transaction_js_1 = require(\"../../errors/transaction.js\");\nconst transactionReceipt_js_1 = require(\"../../utils/formatters/transactionReceipt.js\");\nasync function getTransactionReceipt(client, {\n  hash\n}) {\n  const receipt = await client.request({\n    method: 'eth_getTransactionReceipt',\n    params: [hash]\n  });\n  if (!receipt) throw new transaction_js_1.TransactionReceiptNotFoundError({\n    hash\n  });\n  const format = client.chain?.formatters?.transactionReceipt?.format || transactionReceipt_js_1.formatTransactionReceipt;\n  return format(receipt);\n}\nexports.getTransactionReceipt = getTransactionReceipt;","map":{"version":3,"names":["transaction_js_1","require","transactionReceipt_js_1","getTransactionReceipt","client","hash","receipt","request","method","params","TransactionReceiptNotFoundError","format","chain","formatters","transactionReceipt","formatTransactionReceipt","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/actions/public/getTransactionReceipt.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  TransactionReceiptNotFoundError,\n  type TransactionReceiptNotFoundErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormattedTransactionReceipt,\n  formatTransactionReceipt,\n} from '../../utils/formatters/transactionReceipt.js'\n\nexport type GetTransactionReceiptParameters = {\n  /** The hash of the transaction. */\n  hash: Hash\n}\n\nexport type GetTransactionReceiptReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionReceipt<TChain>\n\nexport type GetTransactionReceiptErrorType =\n  | RequestErrorType\n  | TransactionReceiptNotFoundErrorType\n  | ErrorType\n\n/**\n * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt.html\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionReceiptParameters}\n * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionReceipt } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await getTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionReceipt<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { hash }: GetTransactionReceiptParameters,\n) {\n  const receipt = await client.request({\n    method: 'eth_getTransactionReceipt',\n    params: [hash],\n  })\n\n  if (!receipt) throw new TransactionReceiptNotFoundError({ hash })\n\n  const format =\n    client.chain?.formatters?.transactionReceipt?.format ||\n    formatTransactionReceipt\n  return format(receipt) as GetTransactionReceiptReturnType<TChain>\n}\n"],"mappings":";;;;;;AAEA,MAAAA,gBAAA,GAAAC,OAAA;AAQA,MAAAC,uBAAA,GAAAD,OAAA;AA2CO,eAAeE,qBAAqBA,CACzCC,MAAiC,EACjC;EAAEC;AAAI,CAAmC;EAEzC,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,OAAO,CAAC;IACnCC,MAAM,EAAE,2BAA2B;IACnCC,MAAM,EAAE,CAACJ,IAAI;GACd,CAAC;EAEF,IAAI,CAACC,OAAO,EAAE,MAAM,IAAIN,gBAAA,CAAAU,+BAA+B,CAAC;IAAEL;EAAI,CAAE,CAAC;EAEjE,MAAMM,MAAM,GACVP,MAAM,CAACQ,KAAK,EAAEC,UAAU,EAAEC,kBAAkB,EAAEH,MAAM,IACpDT,uBAAA,CAAAa,wBAAwB;EAC1B,OAAOJ,MAAM,CAACL,OAAO,CAA4C;AACnE;AAfAU,OAAA,CAAAb,qBAAA,GAAAA,qBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}