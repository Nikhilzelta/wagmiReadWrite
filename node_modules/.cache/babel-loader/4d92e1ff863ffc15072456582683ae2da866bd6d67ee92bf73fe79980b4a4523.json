{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OffchainLookupSenderMismatchError = exports.OffchainLookupResponseMalformedError = exports.OffchainLookupError = void 0;\nconst stringify_js_1 = require(\"../utils/stringify.js\");\nconst base_js_1 = require(\"./base.js\");\nconst utils_js_1 = require(\"./utils.js\");\nclass OffchainLookupError extends base_js_1.BaseError {\n  constructor({\n    callbackSelector,\n    cause,\n    data,\n    extraData,\n    sender,\n    urls\n  }) {\n    super(cause.shortMessage || 'An error occurred while fetching for an offchain result.', {\n      cause,\n      metaMessages: [...(cause.metaMessages || []), cause.metaMessages?.length ? '' : [], 'Offchain Gateway Call:', urls && ['  Gateway URL(s):', ...urls.map(url => `    ${(0, utils_js_1.getUrl)(url)}`)], `  Sender: ${sender}`, `  Data: ${data}`, `  Callback selector: ${callbackSelector}`, `  Extra data: ${extraData}`].flat()\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'OffchainLookupError'\n    });\n  }\n}\nexports.OffchainLookupError = OffchainLookupError;\nclass OffchainLookupResponseMalformedError extends base_js_1.BaseError {\n  constructor({\n    result,\n    url\n  }) {\n    super('Offchain gateway response is malformed. Response data must be a hex value.', {\n      metaMessages: [`Gateway URL: ${(0, utils_js_1.getUrl)(url)}`, `Response: ${(0, stringify_js_1.stringify)(result)}`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'OffchainLookupResponseMalformedError'\n    });\n  }\n}\nexports.OffchainLookupResponseMalformedError = OffchainLookupResponseMalformedError;\nclass OffchainLookupSenderMismatchError extends base_js_1.BaseError {\n  constructor({\n    sender,\n    to\n  }) {\n    super('Reverted sender address does not match target contract address (`to`).', {\n      metaMessages: [`Contract address: ${to}`, `OffchainLookup sender address: ${sender}`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'OffchainLookupSenderMismatchError'\n    });\n  }\n}\nexports.OffchainLookupSenderMismatchError = OffchainLookupSenderMismatchError;","map":{"version":3,"names":["stringify_js_1","require","base_js_1","utils_js_1","OffchainLookupError","BaseError","constructor","callbackSelector","cause","data","extraData","sender","urls","shortMessage","metaMessages","length","map","url","getUrl","flat","Object","defineProperty","exports","OffchainLookupResponseMalformedError","result","stringify","OffchainLookupSenderMismatchError","to"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/errors/ccip.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type OffchainLookupErrorType = OffchainLookupError & {\n  name: 'OffchainLookupError'\n}\nexport class OffchainLookupError extends BaseError {\n  override name = 'OffchainLookupError'\n  constructor({\n    callbackSelector,\n    cause,\n    data,\n    extraData,\n    sender,\n    urls,\n  }: {\n    callbackSelector: Hex\n    cause: BaseError\n    data: Hex\n    extraData: Hex\n    sender: Address\n    urls: readonly string[]\n  }) {\n    super(\n      cause.shortMessage ||\n        'An error occurred while fetching for an offchain result.',\n      {\n        cause,\n        metaMessages: [\n          ...(cause.metaMessages || []),\n          cause.metaMessages?.length ? '' : [],\n          'Offchain Gateway Call:',\n          urls && [\n            '  Gateway URL(s):',\n            ...urls.map((url) => `    ${getUrl(url)}`),\n          ],\n          `  Sender: ${sender}`,\n          `  Data: ${data}`,\n          `  Callback selector: ${callbackSelector}`,\n          `  Extra data: ${extraData}`,\n        ].flat(),\n      },\n    )\n  }\n}\n\nexport type OffchainLookupResponseMalformedErrorType =\n  OffchainLookupResponseMalformedError & {\n    name: 'OffchainLookupResponseMalformedError'\n  }\nexport class OffchainLookupResponseMalformedError extends BaseError {\n  override name = 'OffchainLookupResponseMalformedError'\n  constructor({ result, url }: { result: any; url: string }) {\n    super(\n      'Offchain gateway response is malformed. Response data must be a hex value.',\n      {\n        metaMessages: [\n          `Gateway URL: ${getUrl(url)}`,\n          `Response: ${stringify(result)}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type OffchainLookupSenderMismatchErrorType =\n  OffchainLookupSenderMismatchError & {\n    name: 'OffchainLookupSenderMismatchError'\n  }\nexport class OffchainLookupSenderMismatchError extends BaseError {\n  override name = 'OffchainLookupSenderMismatchError'\n  constructor({ sender, to }: { sender: Address; to: Address }) {\n    super(\n      'Reverted sender address does not match target contract address (`to`).',\n      {\n        metaMessages: [\n          `Contract address: ${to}`,\n          `OffchainLookup sender address: ${sender}`,\n        ],\n      },\n    )\n  }\n}\n"],"mappings":";;;;;;AAGA,MAAAA,cAAA,GAAAC,OAAA;AAEA,MAAAC,SAAA,GAAAD,OAAA;AACA,MAAAE,UAAA,GAAAF,OAAA;AAKA,MAAaG,mBAAoB,SAAQF,SAAA,CAAAG,SAAS;EAEhDC,YAAY;IACVC,gBAAgB;IAChBC,KAAK;IACLC,IAAI;IACJC,SAAS;IACTC,MAAM;IACNC;EAAI,CAQL;IACC,KAAK,CACHJ,KAAK,CAACK,YAAY,IAChB,0DAA0D,EAC5D;MACEL,KAAK;MACLM,YAAY,EAAE,CACZ,IAAIN,KAAK,CAACM,YAAY,IAAI,EAAE,CAAC,EAC7BN,KAAK,CAACM,YAAY,EAAEC,MAAM,GAAG,EAAE,GAAG,EAAE,EACpC,wBAAwB,EACxBH,IAAI,IAAI,CACN,mBAAmB,EACnB,GAAGA,IAAI,CAACI,GAAG,CAAEC,GAAG,IAAK,OAAO,IAAAd,UAAA,CAAAe,MAAM,EAACD,GAAG,CAAC,EAAE,CAAC,CAC3C,EACD,aAAaN,MAAM,EAAE,EACrB,WAAWF,IAAI,EAAE,EACjB,wBAAwBF,gBAAgB,EAAE,EAC1C,iBAAiBG,SAAS,EAAE,CAC7B,CAACS,IAAI;KACP,CACF;IAnCMC,MAAA,CAAAC,cAAA;;;;aAAO;;EAoChB;;AArCFC,OAAA,CAAAlB,mBAAA,GAAAA,mBAAA;AA4CA,MAAamB,oCAAqC,SAAQrB,SAAA,CAAAG,SAAS;EAEjEC,YAAY;IAAEkB,MAAM;IAAEP;EAAG,CAAgC;IACvD,KAAK,CACH,4EAA4E,EAC5E;MACEH,YAAY,EAAE,CACZ,gBAAgB,IAAAX,UAAA,CAAAe,MAAM,EAACD,GAAG,CAAC,EAAE,EAC7B,aAAa,IAAAjB,cAAA,CAAAyB,SAAS,EAACD,MAAM,CAAC,EAAE;KAEnC,CACF;IAVMJ,MAAA,CAAAC,cAAA;;;;aAAO;;EAWhB;;AAZFC,OAAA,CAAAC,oCAAA,GAAAA,oCAAA;AAmBA,MAAaG,iCAAkC,SAAQxB,SAAA,CAAAG,SAAS;EAE9DC,YAAY;IAAEK,MAAM;IAAEgB;EAAE,CAAoC;IAC1D,KAAK,CACH,wEAAwE,EACxE;MACEb,YAAY,EAAE,CACZ,qBAAqBa,EAAE,EAAE,EACzB,kCAAkChB,MAAM,EAAE;KAE7C,CACF;IAVMS,MAAA,CAAAC,cAAA;;;;aAAO;;EAWhB;;AAZFC,OAAA,CAAAI,iCAAA,GAAAA,iCAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}