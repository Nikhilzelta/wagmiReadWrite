{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAddress = exports.checksumAddress = void 0;\nconst address_js_1 = require(\"../../errors/address.js\");\nconst toBytes_js_1 = require(\"../encoding/toBytes.js\");\nconst keccak256_js_1 = require(\"../hash/keccak256.js\");\nconst isAddress_js_1 = require(\"./isAddress.js\");\nfunction checksumAddress(address_, chainId) {\n  const hexAddress = chainId ? `${chainId}${address_.toLowerCase()}` : address_.substring(2).toLowerCase();\n  const hash = (0, keccak256_js_1.keccak256)((0, toBytes_js_1.stringToBytes)(hexAddress), 'bytes');\n  const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase();\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase();\n    }\n  }\n  return `0x${address.join('')}`;\n}\nexports.checksumAddress = checksumAddress;\nfunction getAddress(address, chainId) {\n  if (!(0, isAddress_js_1.isAddress)(address)) throw new address_js_1.InvalidAddressError({\n    address\n  });\n  return checksumAddress(address, chainId);\n}\nexports.getAddress = getAddress;","map":{"version":3,"names":["address_js_1","require","toBytes_js_1","keccak256_js_1","isAddress_js_1","checksumAddress","address_","chainId","hexAddress","toLowerCase","substring","hash","keccak256","stringToBytes","address","length","split","i","toUpperCase","join","exports","getAddress","isAddress","InvalidAddressError"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/address/getAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { type IsAddressErrorType, isAddress } from './isAddress.js'\n\nexport type ChecksumAddressErrorType =\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\nexport function checksumAddress(address_: Address, chainId?: number): Address {\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  return `0x${address.join('')}`\n}\n\nexport type GetAddressErrorType =\n  | ChecksumAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function getAddress(address: string, chainId?: number): Address {\n  if (!isAddress(address)) throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n"],"mappings":";;;;;;AAEA,MAAAA,YAAA,GAAAC,OAAA;AAEA,MAAAC,YAAA,GAAAD,OAAA;AAIA,MAAAE,cAAA,GAAAF,OAAA;AACA,MAAAG,cAAA,GAAAH,OAAA;AAOA,SAAgBI,eAAeA,CAACC,QAAiB,EAAEC,OAAgB;EACjE,MAAMC,UAAU,GAAGD,OAAO,GACtB,GAAGA,OAAO,GAAGD,QAAQ,CAACG,WAAW,EAAE,EAAE,GACrCH,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC,CAACD,WAAW,EAAE;EACvC,MAAME,IAAI,GAAG,IAAAR,cAAA,CAAAS,SAAS,EAAC,IAAAV,YAAA,CAAAW,aAAa,EAACL,UAAU,CAAC,EAAE,OAAO,CAAC;EAE1D,MAAMM,OAAO,GAAG,CACdP,OAAO,GAAGC,UAAU,CAACE,SAAS,CAAC,GAAGH,OAAO,IAAI,CAACQ,MAAM,CAAC,GAAGP,UAAU,EAClEQ,KAAK,CAAC,EAAE,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;IAC9B,IAAIN,IAAI,CAACM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAIH,OAAO,CAACG,CAAC,CAAC,EAAE;MACxCH,OAAO,CAACG,CAAC,CAAC,GAAGH,OAAO,CAACG,CAAC,CAAC,CAACC,WAAW,EAAE;;IAEvC,IAAI,CAACP,IAAI,CAACM,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAIH,OAAO,CAACG,CAAC,GAAG,CAAC,CAAC,EAAE;MAChDH,OAAO,CAACG,CAAC,GAAG,CAAC,CAAC,GAAGH,OAAO,CAACG,CAAC,GAAG,CAAC,CAAC,CAACC,WAAW,EAAE;;;EAIjD,OAAO,KAAKJ,OAAO,CAACK,IAAI,CAAC,EAAE,CAAC,EAAE;AAChC;AAnBAC,OAAA,CAAAf,eAAA,GAAAA,eAAA;AA0BA,SAAgBgB,UAAUA,CAACP,OAAe,EAAEP,OAAgB;EAC1D,IAAI,CAAC,IAAAH,cAAA,CAAAkB,SAAS,EAACR,OAAO,CAAC,EAAE,MAAM,IAAId,YAAA,CAAAuB,mBAAmB,CAAC;IAAET;EAAO,CAAE,CAAC;EACnE,OAAOT,eAAe,CAACS,OAAO,EAAEP,OAAO,CAAC;AAC1C;AAHAa,OAAA,CAAAC,UAAA,GAAAA,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}