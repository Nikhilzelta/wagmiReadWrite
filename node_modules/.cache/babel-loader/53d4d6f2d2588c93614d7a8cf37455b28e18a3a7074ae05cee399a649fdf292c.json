{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertTransactionLegacy = exports.assertTransactionEIP2930 = exports.assertTransactionEIP1559 = void 0;\nconst address_js_1 = require(\"../../errors/address.js\");\nconst base_js_1 = require(\"../../errors/base.js\");\nconst chain_js_1 = require(\"../../errors/chain.js\");\nconst node_js_1 = require(\"../../errors/node.js\");\nconst isAddress_js_1 = require(\"../address/isAddress.js\");\nfunction assertTransactionEIP1559(transaction) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to\n  } = transaction;\n  if (chainId <= 0) throw new chain_js_1.InvalidChainIdError({\n    chainId\n  });\n  if (to && !(0, isAddress_js_1.isAddress)(to)) throw new address_js_1.InvalidAddressError({\n    address: to\n  });\n  if (gasPrice) throw new base_js_1.BaseError('`gasPrice` is not a valid EIP-1559 Transaction attribute.');\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n) throw new node_js_1.FeeCapTooHighError({\n    maxFeePerGas\n  });\n  if (maxPriorityFeePerGas && maxFeePerGas && maxPriorityFeePerGas > maxFeePerGas) throw new node_js_1.TipAboveFeeCapError({\n    maxFeePerGas,\n    maxPriorityFeePerGas\n  });\n}\nexports.assertTransactionEIP1559 = assertTransactionEIP1559;\nfunction assertTransactionEIP2930(transaction) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to\n  } = transaction;\n  if (chainId <= 0) throw new chain_js_1.InvalidChainIdError({\n    chainId\n  });\n  if (to && !(0, isAddress_js_1.isAddress)(to)) throw new address_js_1.InvalidAddressError({\n    address: to\n  });\n  if (maxPriorityFeePerGas || maxFeePerGas) throw new base_js_1.BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n  if (gasPrice && gasPrice > 2n ** 256n - 1n) throw new node_js_1.FeeCapTooHighError({\n    maxFeePerGas: gasPrice\n  });\n}\nexports.assertTransactionEIP2930 = assertTransactionEIP2930;\nfunction assertTransactionLegacy(transaction) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    accessList\n  } = transaction;\n  if (to && !(0, isAddress_js_1.isAddress)(to)) throw new address_js_1.InvalidAddressError({\n    address: to\n  });\n  if (typeof chainId !== 'undefined' && chainId <= 0) throw new chain_js_1.InvalidChainIdError({\n    chainId\n  });\n  if (maxPriorityFeePerGas || maxFeePerGas) throw new base_js_1.BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n  if (gasPrice && gasPrice > 2n ** 256n - 1n) throw new node_js_1.FeeCapTooHighError({\n    maxFeePerGas: gasPrice\n  });\n  if (accessList) throw new base_js_1.BaseError('`accessList` is not a valid Legacy Transaction attribute.');\n}\nexports.assertTransactionLegacy = assertTransactionLegacy;","map":{"version":3,"names":["address_js_1","require","base_js_1","chain_js_1","node_js_1","isAddress_js_1","assertTransactionEIP1559","transaction","chainId","maxPriorityFeePerGas","gasPrice","maxFeePerGas","to","InvalidChainIdError","isAddress","InvalidAddressError","address","BaseError","FeeCapTooHighError","TipAboveFeeCapError","exports","assertTransactionEIP2930","assertTransactionLegacy","accessList"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/transaction/assertTransaction.ts"],"sourcesContent":["import {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError, type BaseErrorType } from '../../errors/base.js'\nimport {\n  InvalidChainIdError,\n  type InvalidChainIdErrorType,\n} from '../../errors/chain.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\n\nexport type AssertTransactionEIP1559ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (gasPrice)\n    throw new BaseError(\n      '`gasPrice` is not a valid EIP-1559 Transaction attribute.',\n    )\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n\nexport type AssertTransactionEIP2930ErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n\nexport type AssertTransactionLegacyErrorType =\n  | BaseErrorType\n  | IsAddressErrorType\n  | InvalidAddressErrorType\n  | InvalidChainIdErrorType\n  | FeeCapTooHighErrorType\n  | ErrorType\n\nexport function assertTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    accessList,\n  } = transaction\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (typeof chainId !== 'undefined' && chainId <= 0)\n    throw new InvalidChainIdError({ chainId })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n  if (accessList)\n    throw new BaseError(\n      '`accessList` is not a valid Legacy Transaction attribute.',\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}