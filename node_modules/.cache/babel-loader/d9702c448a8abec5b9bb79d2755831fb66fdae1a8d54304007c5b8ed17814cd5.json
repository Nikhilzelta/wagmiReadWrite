{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildRequest = exports.isDeterministicError = void 0;\nconst base_js_1 = require(\"../errors/base.js\");\nconst request_js_1 = require(\"../errors/request.js\");\nconst rpc_js_1 = require(\"../errors/rpc.js\");\nconst withRetry_js_1 = require(\"./promise/withRetry.js\");\nconst isDeterministicError = error => {\n  if ('code' in error) return error.code !== -1 && error.code !== -32004 && error.code !== -32005 && error.code !== -32042 && error.code !== -32603;\n  if (error instanceof request_js_1.HttpRequestError && error.status) return error.status !== 403 && error.status !== 408 && error.status !== 413 && error.status !== 429 && error.status !== 500 && error.status !== 502 && error.status !== 503 && error.status !== 504;\n  return false;\n};\nexports.isDeterministicError = isDeterministicError;\nfunction buildRequest(request, {\n  retryDelay = 150,\n  retryCount = 3\n} = {}) {\n  return async args => (0, withRetry_js_1.withRetry)(async () => {\n    try {\n      return await request(args);\n    } catch (err_) {\n      const err = err_;\n      switch (err.code) {\n        case rpc_js_1.ParseRpcError.code:\n          throw new rpc_js_1.ParseRpcError(err);\n        case rpc_js_1.InvalidRequestRpcError.code:\n          throw new rpc_js_1.InvalidRequestRpcError(err);\n        case rpc_js_1.MethodNotFoundRpcError.code:\n          throw new rpc_js_1.MethodNotFoundRpcError(err);\n        case rpc_js_1.InvalidParamsRpcError.code:\n          throw new rpc_js_1.InvalidParamsRpcError(err);\n        case rpc_js_1.InternalRpcError.code:\n          throw new rpc_js_1.InternalRpcError(err);\n        case rpc_js_1.InvalidInputRpcError.code:\n          throw new rpc_js_1.InvalidInputRpcError(err);\n        case rpc_js_1.ResourceNotFoundRpcError.code:\n          throw new rpc_js_1.ResourceNotFoundRpcError(err);\n        case rpc_js_1.ResourceUnavailableRpcError.code:\n          throw new rpc_js_1.ResourceUnavailableRpcError(err);\n        case rpc_js_1.TransactionRejectedRpcError.code:\n          throw new rpc_js_1.TransactionRejectedRpcError(err);\n        case rpc_js_1.MethodNotSupportedRpcError.code:\n          throw new rpc_js_1.MethodNotSupportedRpcError(err);\n        case rpc_js_1.LimitExceededRpcError.code:\n          throw new rpc_js_1.LimitExceededRpcError(err);\n        case rpc_js_1.JsonRpcVersionUnsupportedError.code:\n          throw new rpc_js_1.JsonRpcVersionUnsupportedError(err);\n        case rpc_js_1.UserRejectedRequestError.code:\n          throw new rpc_js_1.UserRejectedRequestError(err);\n        case rpc_js_1.UnauthorizedProviderError.code:\n          throw new rpc_js_1.UnauthorizedProviderError(err);\n        case rpc_js_1.UnsupportedProviderMethodError.code:\n          throw new rpc_js_1.UnsupportedProviderMethodError(err);\n        case rpc_js_1.ProviderDisconnectedError.code:\n          throw new rpc_js_1.ProviderDisconnectedError(err);\n        case rpc_js_1.ChainDisconnectedError.code:\n          throw new rpc_js_1.ChainDisconnectedError(err);\n        case rpc_js_1.SwitchChainError.code:\n          throw new rpc_js_1.SwitchChainError(err);\n        case 5000:\n          throw new rpc_js_1.UserRejectedRequestError(err);\n        default:\n          if (err_ instanceof base_js_1.BaseError) throw err_;\n          throw new rpc_js_1.UnknownRpcError(err);\n      }\n    }\n  }, {\n    delay: ({\n      count,\n      error\n    }) => {\n      if (error && error instanceof request_js_1.HttpRequestError) {\n        const retryAfter = error?.headers?.get('Retry-After');\n        if (retryAfter?.match(/\\d/)) return parseInt(retryAfter) * 1000;\n      }\n      return ~~(1 << count) * retryDelay;\n    },\n    retryCount,\n    shouldRetry: ({\n      error\n    }) => !(0, exports.isDeterministicError)(error)\n  });\n}\nexports.buildRequest = buildRequest;","map":{"version":3,"names":["base_js_1","require","request_js_1","rpc_js_1","withRetry_js_1","isDeterministicError","error","code","HttpRequestError","status","exports","buildRequest","request","retryDelay","retryCount","args","withRetry","err_","err","ParseRpcError","InvalidRequestRpcError","MethodNotFoundRpcError","InvalidParamsRpcError","InternalRpcError","InvalidInputRpcError","ResourceNotFoundRpcError","ResourceUnavailableRpcError","TransactionRejectedRpcError","MethodNotSupportedRpcError","LimitExceededRpcError","JsonRpcVersionUnsupportedError","UserRejectedRequestError","UnauthorizedProviderError","UnsupportedProviderMethodError","ProviderDisconnectedError","ChainDisconnectedError","SwitchChainError","BaseError","UnknownRpcError","delay","count","retryAfter","headers","get","match","parseInt","shouldRetry"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/buildRequest.ts"],"sourcesContent":["import { BaseError } from '../errors/base.js'\nimport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  type RpcRequestErrorType,\n  type TimeoutErrorType,\n  type WebSocketRequestErrorType,\n} from '../errors/request.js'\nimport {\n  ChainDisconnectedError,\n  type ChainDisconnectedErrorType,\n  InternalRpcError,\n  type InternalRpcErrorType,\n  InvalidInputRpcError,\n  type InvalidInputRpcErrorType,\n  InvalidParamsRpcError,\n  type InvalidParamsRpcErrorType,\n  InvalidRequestRpcError,\n  type InvalidRequestRpcErrorType,\n  JsonRpcVersionUnsupportedError,\n  type JsonRpcVersionUnsupportedErrorType,\n  LimitExceededRpcError,\n  type LimitExceededRpcErrorType,\n  MethodNotFoundRpcError,\n  type MethodNotFoundRpcErrorType,\n  MethodNotSupportedRpcError,\n  type MethodNotSupportedRpcErrorType,\n  ParseRpcError,\n  type ParseRpcErrorType,\n  ProviderDisconnectedError,\n  type ProviderDisconnectedErrorType,\n  type ProviderRpcErrorCode,\n  ResourceNotFoundRpcError,\n  type ResourceNotFoundRpcErrorType,\n  ResourceUnavailableRpcError,\n  type ResourceUnavailableRpcErrorType,\n  type RpcError,\n  type RpcErrorCode,\n  type RpcErrorType,\n  SwitchChainError,\n  type SwitchChainErrorType,\n  TransactionRejectedRpcError,\n  type TransactionRejectedRpcErrorType,\n  UnauthorizedProviderError,\n  type UnauthorizedProviderErrorType,\n  UnknownRpcError,\n  type UnknownRpcErrorType,\n  UnsupportedProviderMethodError,\n  type UnsupportedProviderMethodErrorType,\n  UserRejectedRequestError,\n  type UserRejectedRequestErrorType,\n} from '../errors/rpc.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { CreateBatchSchedulerErrorType } from './promise/createBatchScheduler.js'\nimport { type WithRetryErrorType, withRetry } from './promise/withRetry.js'\nimport type { GetSocketErrorType } from './rpc.js'\n\nexport type IsDeterministicErrorType = ErrorType\n\nexport const isDeterministicError = (error: Error) => {\n  if ('code' in error)\n    return (\n      error.code !== -1 &&\n      error.code !== -32004 &&\n      error.code !== -32005 &&\n      error.code !== -32042 &&\n      error.code !== -32603\n    )\n  if (error instanceof HttpRequestError && error.status)\n    return (\n      error.status !== 403 &&\n      error.status !== 408 &&\n      error.status !== 413 &&\n      error.status !== 429 &&\n      error.status !== 500 &&\n      error.status !== 502 &&\n      error.status !== 503 &&\n      error.status !== 504\n    )\n  return false\n}\n\nexport type RequestErrorType =\n  | ChainDisconnectedErrorType\n  | CreateBatchSchedulerErrorType\n  | HttpRequestErrorType\n  | InternalRpcErrorType\n  | InvalidInputRpcErrorType\n  | InvalidParamsRpcErrorType\n  | InvalidRequestRpcErrorType\n  | GetSocketErrorType\n  | JsonRpcVersionUnsupportedErrorType\n  | LimitExceededRpcErrorType\n  | MethodNotFoundRpcErrorType\n  | MethodNotSupportedRpcErrorType\n  | ParseRpcErrorType\n  | ProviderDisconnectedErrorType\n  | ResourceNotFoundRpcErrorType\n  | ResourceUnavailableRpcErrorType\n  | RpcErrorType\n  | RpcRequestErrorType\n  | SwitchChainErrorType\n  | TimeoutErrorType\n  | TransactionRejectedRpcErrorType\n  | UnauthorizedProviderErrorType\n  | UnknownRpcErrorType\n  | UnsupportedProviderMethodErrorType\n  | UserRejectedRequestErrorType\n  | WebSocketRequestErrorType\n  | WithRetryErrorType\n  | ErrorType\n\nexport function buildRequest<TRequest extends (args: any) => Promise<any>>(\n  request: TRequest,\n  {\n    retryDelay = 150,\n    retryCount = 3,\n  }: {\n    // The base delay (in ms) between retries.\n    retryDelay?: number\n    // The max number of times to retry.\n    retryCount?: number\n  } = {},\n) {\n  return (async (args: any) =>\n    withRetry(\n      async () => {\n        try {\n          return await request(args)\n        } catch (err_) {\n          const err = err_ as unknown as RpcError<\n            RpcErrorCode | ProviderRpcErrorCode\n          >\n          switch (err.code) {\n            // -32700\n            case ParseRpcError.code:\n              throw new ParseRpcError(err)\n            // -32600\n            case InvalidRequestRpcError.code:\n              throw new InvalidRequestRpcError(err)\n            // -32601\n            case MethodNotFoundRpcError.code:\n              throw new MethodNotFoundRpcError(err)\n            // -32602\n            case InvalidParamsRpcError.code:\n              throw new InvalidParamsRpcError(err)\n            // -32603\n            case InternalRpcError.code:\n              throw new InternalRpcError(err)\n            // -32000\n            case InvalidInputRpcError.code:\n              throw new InvalidInputRpcError(err)\n            // -32001\n            case ResourceNotFoundRpcError.code:\n              throw new ResourceNotFoundRpcError(err)\n            // -32002\n            case ResourceUnavailableRpcError.code:\n              throw new ResourceUnavailableRpcError(err)\n            // -32003\n            case TransactionRejectedRpcError.code:\n              throw new TransactionRejectedRpcError(err)\n            // -32004\n            case MethodNotSupportedRpcError.code:\n              throw new MethodNotSupportedRpcError(err)\n            // -32005\n            case LimitExceededRpcError.code:\n              throw new LimitExceededRpcError(err)\n            // -32006\n            case JsonRpcVersionUnsupportedError.code:\n              throw new JsonRpcVersionUnsupportedError(err)\n            // 4001\n            case UserRejectedRequestError.code:\n              throw new UserRejectedRequestError(err)\n            // 4100\n            case UnauthorizedProviderError.code:\n              throw new UnauthorizedProviderError(err)\n            // 4200\n            case UnsupportedProviderMethodError.code:\n              throw new UnsupportedProviderMethodError(err)\n            // 4900\n            case ProviderDisconnectedError.code:\n              throw new ProviderDisconnectedError(err)\n            // 4901\n            case ChainDisconnectedError.code:\n              throw new ChainDisconnectedError(err)\n            // 4902\n            case SwitchChainError.code:\n              throw new SwitchChainError(err)\n            // CAIP-25: User Rejected Error\n            // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n            case 5000:\n              throw new UserRejectedRequestError(err)\n            default:\n              if (err_ instanceof BaseError) throw err_\n              throw new UnknownRpcError(err as Error)\n          }\n        }\n      },\n      {\n        delay: ({ count, error }) => {\n          // If we find a Retry-After header, let's retry after the given time.\n          if (error && error instanceof HttpRequestError) {\n            const retryAfter = error?.headers?.get('Retry-After')\n            if (retryAfter?.match(/\\d/)) return parseInt(retryAfter) * 1000\n          }\n\n          // Otherwise, let's retry with an exponential backoff.\n          return ~~(1 << count) * retryDelay\n        },\n        retryCount,\n        shouldRetry: ({ error }) => !isDeterministicError(error),\n      },\n    )) as TRequest\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}