{"ast":null,"code":"/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n  constructor(size) {\n    super();\n    Object.defineProperty(this, \"maxSize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.maxSize = size;\n  }\n  set(key, value) {\n    super.set(key, value);\n    if (this.maxSize && this.size > this.maxSize) this.delete(this.keys().next().value);\n    return this;\n  }\n}","map":{"version":3,"names":["LruMap","Map","constructor","size","Object","defineProperty","maxSize","set","key","value","delete","keys","next"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/viem/utils/lru.ts"],"sourcesContent":["/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize)\n      this.delete(this.keys().next().value)\n    return this\n  }\n}\n"],"mappings":"AAAA;;;;;AAKA,OAAM,MAAOA,MAAwB,SAAQC,GAAkB;EAG7DC,YAAYC,IAAY;IACtB,KAAK,EAAE;IAHTC,MAAA,CAAAC,cAAA;;;;;;IAIE,IAAI,CAACC,OAAO,GAAGH,IAAI;EACrB;EAESI,GAAGA,CAACC,GAAW,EAAEC,KAAY;IACpC,KAAK,CAACF,GAAG,CAACC,GAAG,EAAEC,KAAK,CAAC;IACrB,IAAI,IAAI,CAACH,OAAO,IAAI,IAAI,CAACH,IAAI,GAAG,IAAI,CAACG,OAAO,EAC1C,IAAI,CAACI,MAAM,CAAC,IAAI,CAACC,IAAI,EAAE,CAACC,IAAI,EAAE,CAACH,KAAK,CAAC;IACvC,OAAO,IAAI;EACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}