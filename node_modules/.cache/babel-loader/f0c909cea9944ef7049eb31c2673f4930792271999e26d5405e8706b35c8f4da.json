{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeDeployData = void 0;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst decodeAbiParameters_js_1 = require(\"./decodeAbiParameters.js\");\nconst docsPath = '/docs/contract/decodeDeployData';\nfunction decodeDeployData({\n  abi,\n  bytecode,\n  data\n}) {\n  if (data === bytecode) return {\n    bytecode\n  };\n  const description = abi.find(x => 'type' in x && x.type === 'constructor');\n  if (!description) throw new abi_js_1.AbiConstructorNotFoundError({\n    docsPath\n  });\n  if (!('inputs' in description)) throw new abi_js_1.AbiConstructorParamsNotFoundError({\n    docsPath\n  });\n  if (!description.inputs || description.inputs.length === 0) throw new abi_js_1.AbiConstructorParamsNotFoundError({\n    docsPath\n  });\n  const args = (0, decodeAbiParameters_js_1.decodeAbiParameters)(description.inputs, `0x${data.replace(bytecode, '')}`);\n  return {\n    args,\n    bytecode\n  };\n}\nexports.decodeDeployData = decodeDeployData;","map":{"version":3,"names":["abi_js_1","require","decodeAbiParameters_js_1","docsPath","decodeDeployData","abi","bytecode","data","description","find","x","type","AbiConstructorNotFoundError","AbiConstructorParamsNotFoundError","inputs","length","args","decodeAbiParameters","replace","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/abi/decodeDeployData.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n  type AbiConstructorParamsNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/decodeDeployData'\n\nexport type DecodeDeployDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: TAbi\n  bytecode: Hex\n  data: Hex\n}\n\nexport type DecodeDeployDataReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  bytecode: Hex\n} & GetConstructorArgs<TAbi>\n\nexport type DecodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | AbiConstructorParamsNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | ErrorType\n\nexport function decodeDeployData<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  bytecode,\n  data,\n}: DecodeDeployDataParameters<TAbi>): DecodeDeployDataReturnType<TAbi> {\n  if (data === bytecode) return { bytecode } as DecodeDeployDataReturnType<TAbi>\n\n  const description = (abi as Abi).find(\n    (x) => 'type' in x && x.type === 'constructor',\n  )\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const args = decodeAbiParameters(\n    description.inputs,\n    `0x${data.replace(bytecode, '')}`,\n  )\n  return { args, bytecode } as unknown as DecodeDeployDataReturnType<TAbi>\n}\n"],"mappings":";;;;;;AAEA,MAAAA,QAAA,GAAAC,OAAA;AAUA,MAAAC,wBAAA,GAAAD,OAAA;AAKA,MAAME,QAAQ,GAAG,iCAAiC;AAsBlD,SAAgBC,gBAAgBA,CAA8C;EAC5EC,GAAG;EACHC,QAAQ;EACRC;AAAI,CAC6B;EACjC,IAAIA,IAAI,KAAKD,QAAQ,EAAE,OAAO;IAAEA;EAAQ,CAAsC;EAE9E,MAAME,WAAW,GAAIH,GAAW,CAACI,IAAI,CAClCC,CAAC,IAAK,MAAM,IAAIA,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,aAAa,CAC/C;EACD,IAAI,CAACH,WAAW,EAAE,MAAM,IAAIR,QAAA,CAAAY,2BAA2B,CAAC;IAAET;EAAQ,CAAE,CAAC;EACrE,IAAI,EAAE,QAAQ,IAAIK,WAAW,CAAC,EAC5B,MAAM,IAAIR,QAAA,CAAAa,iCAAiC,CAAC;IAAEV;EAAQ,CAAE,CAAC;EAC3D,IAAI,CAACK,WAAW,CAACM,MAAM,IAAIN,WAAW,CAACM,MAAM,CAACC,MAAM,KAAK,CAAC,EACxD,MAAM,IAAIf,QAAA,CAAAa,iCAAiC,CAAC;IAAEV;EAAQ,CAAE,CAAC;EAE3D,MAAMa,IAAI,GAAG,IAAAd,wBAAA,CAAAe,mBAAmB,EAC9BT,WAAW,CAACM,MAAM,EAClB,KAAKP,IAAI,CAACW,OAAO,CAACZ,QAAQ,EAAE,EAAE,CAAC,EAAE,CAClC;EACD,OAAO;IAAEU,IAAI;IAAEV;EAAQ,CAAiD;AAC1E;AArBAa,OAAA,CAAAf,gBAAA,GAAAA,gBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}