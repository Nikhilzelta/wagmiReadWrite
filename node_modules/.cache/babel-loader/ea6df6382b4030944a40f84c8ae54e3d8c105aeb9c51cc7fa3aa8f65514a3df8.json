{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineTransactionReceipt = exports.formatTransactionReceipt = void 0;\nconst fromHex_js_1 = require(\"../encoding/fromHex.js\");\nconst formatter_js_1 = require(\"./formatter.js\");\nconst log_js_1 = require(\"./log.js\");\nconst transaction_js_1 = require(\"./transaction.js\");\nconst statuses = {\n  '0x0': 'reverted',\n  '0x1': 'success'\n};\nfunction formatTransactionReceipt(transactionReceipt) {\n  return {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber ? BigInt(transactionReceipt.blockNumber) : null,\n    contractAddress: transactionReceipt.contractAddress ? transactionReceipt.contractAddress : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed ? BigInt(transactionReceipt.cumulativeGasUsed) : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice ? BigInt(transactionReceipt.effectiveGasPrice) : null,\n    gasUsed: transactionReceipt.gasUsed ? BigInt(transactionReceipt.gasUsed) : null,\n    logs: transactionReceipt.logs ? transactionReceipt.logs.map(log => (0, log_js_1.formatLog)(log)) : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex ? (0, fromHex_js_1.hexToNumber)(transactionReceipt.transactionIndex) : null,\n    status: transactionReceipt.status ? statuses[transactionReceipt.status] : null,\n    type: transactionReceipt.type ? transaction_js_1.transactionType[transactionReceipt.type] || transactionReceipt.type : null\n  };\n}\nexports.formatTransactionReceipt = formatTransactionReceipt;\nexports.defineTransactionReceipt = (0, formatter_js_1.defineFormatter)('transactionReceipt', formatTransactionReceipt);","map":{"version":3,"names":["fromHex_js_1","require","formatter_js_1","log_js_1","transaction_js_1","statuses","formatTransactionReceipt","transactionReceipt","blockNumber","BigInt","contractAddress","cumulativeGasUsed","effectiveGasPrice","gasUsed","logs","map","log","formatLog","to","transactionIndex","hexToNumber","status","type","transactionType","exports","defineTransactionReceipt","defineFormatter"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/formatters/transactionReceipt.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  TChain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterReturnType<\n  TChain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nconst statuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: Partial<RpcTransactionReceipt>,\n) {\n  return {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? statuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n"],"mappings":";;;;;;AAOA,MAAAA,YAAA,GAAAC,OAAA;AAEA,MAAAC,cAAA,GAAAD,OAAA;AACA,MAAAE,QAAA,GAAAF,OAAA;AACA,MAAAG,gBAAA,GAAAH,OAAA;AAUA,MAAMI,QAAQ,GAAG;EACf,KAAK,EAAE,UAAU;EACjB,KAAK,EAAE;CACC;AAIV,SAAgBC,wBAAwBA,CACtCC,kBAAkD;EAElD,OAAO;IACL,GAAGA,kBAAkB;IACrBC,WAAW,EAAED,kBAAkB,CAACC,WAAW,GACvCC,MAAM,CAACF,kBAAkB,CAACC,WAAW,CAAC,GACtC,IAAI;IACRE,eAAe,EAAEH,kBAAkB,CAACG,eAAe,GAC/CH,kBAAkB,CAACG,eAAe,GAClC,IAAI;IACRC,iBAAiB,EAAEJ,kBAAkB,CAACI,iBAAiB,GACnDF,MAAM,CAACF,kBAAkB,CAACI,iBAAiB,CAAC,GAC5C,IAAI;IACRC,iBAAiB,EAAEL,kBAAkB,CAACK,iBAAiB,GACnDH,MAAM,CAACF,kBAAkB,CAACK,iBAAiB,CAAC,GAC5C,IAAI;IACRC,OAAO,EAAEN,kBAAkB,CAACM,OAAO,GAC/BJ,MAAM,CAACF,kBAAkB,CAACM,OAAO,CAAC,GAClC,IAAI;IACRC,IAAI,EAAEP,kBAAkB,CAACO,IAAI,GACzBP,kBAAkB,CAACO,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAK,IAAAb,QAAA,CAAAc,SAAS,EAACD,GAAG,CAAC,CAAC,GACpD,IAAI;IACRE,EAAE,EAAEX,kBAAkB,CAACW,EAAE,GAAGX,kBAAkB,CAACW,EAAE,GAAG,IAAI;IACxDC,gBAAgB,EAAEZ,kBAAkB,CAACY,gBAAgB,GACjD,IAAAnB,YAAA,CAAAoB,WAAW,EAACb,kBAAkB,CAACY,gBAAgB,CAAC,GAChD,IAAI;IACRE,MAAM,EAAEd,kBAAkB,CAACc,MAAM,GAC7BhB,QAAQ,CAACE,kBAAkB,CAACc,MAAM,CAAC,GACnC,IAAI;IACRC,IAAI,EAAEf,kBAAkB,CAACe,IAAI,GACzBlB,gBAAA,CAAAmB,eAAe,CACbhB,kBAAkB,CAACe,IAAoC,CACxD,IAAIf,kBAAkB,CAACe,IAAI,GAC5B;GACiB;AACzB;AApCAE,OAAA,CAAAlB,wBAAA,GAAAA,wBAAA;AA0CakB,OAAA,CAAAC,wBAAwB,GAAiB,IAAAvB,cAAA,CAAAwB,eAAe,EACnE,oBAAoB,EACpBpB,wBAAwB,CACzB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}