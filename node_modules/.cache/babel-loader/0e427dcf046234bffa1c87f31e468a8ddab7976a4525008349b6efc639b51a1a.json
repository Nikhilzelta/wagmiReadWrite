{"ast":null,"code":"import '@tanstack/query-core';\nimport '../types/utils.js';","map":{"version":3,"names":[],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/wagmi/node_modules/@wagmi/core/src/query/types.ts"],"sourcesContent":["import {\n  type DefaultError,\n  type InfiniteQueryObserverOptions,\n  type MutateOptions,\n  type QueryKey,\n  type QueryMeta,\n} from '@tanstack/query-core'\n\nimport { type Evaluate, type Omit } from '../types/utils.js'\n\nexport type InfiniteQueryOptions<\n  queryFnData = unknown,\n  error = DefaultError,\n  data = queryFnData,\n  queryData = queryFnData,\n  queryKey extends QueryKey = QueryKey,\n  pageParam = unknown,\n  ///\n  options extends InfiniteQueryObserverOptions<\n    queryFnData,\n    error,\n    data,\n    queryData,\n    queryKey,\n    pageParam\n  > = InfiniteQueryObserverOptions<\n    queryFnData,\n    error,\n    data,\n    queryData,\n    queryKey,\n    pageParam\n  >,\n> = Evaluate<\n  // `queryFn` doesn't pass through `pageParam` correctly\n  Omit<options, 'queryFn'> & {\n    // TS2742: `QueryFunctionContext` not exported from `@tanstack/query-core`\n    queryFn?(context: {\n      queryKey: queryKey\n      signal: AbortSignal\n      pageParam: pageParam\n      direction: 'forward' | 'backward'\n      meta: QueryMeta | undefined\n    }): ReturnType<NonNullable<options['queryFn']>>\n  }\n>\n\nexport type Mutate<\n  data = unknown,\n  error = unknown,\n  variables = void,\n  context = unknown,\n> = (\n  ...args: Parameters<MutateFn<data, error, Evaluate<variables>, context>>\n) => void\n\nexport type MutateAsync<\n  data = unknown,\n  error = unknown,\n  variables = void,\n  context = unknown,\n> = MutateFn<data, error, Evaluate<variables>, context>\n\ntype MutateFn<\n  data = unknown,\n  error = unknown,\n  variables = void,\n  context = unknown,\n> = undefined extends variables\n  ? (\n      variables?: variables,\n      options?:\n        | Evaluate<MutateOptions<data, error, variables, context>>\n        | undefined,\n    ) => Promise<data>\n  : (\n      variables: variables,\n      options?:\n        | Evaluate<MutateOptions<data, error, variables, context>>\n        | undefined,\n    ) => Promise<data>\n"],"mappings":"AAAA,OAMO,sBAAsB;AAE7B,OAAyC,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}