{"ast":null,"code":"import { BaseError } from './base.js';\nexport class IntegerOutOfRangeError extends BaseError {\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value\n  }) {\n    super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'IntegerOutOfRangeError'\n    });\n  }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  constructor(bytes) {\n    super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidBytesBooleanError'\n    });\n  }\n}\nexport class InvalidHexBooleanError extends BaseError {\n  constructor(hex) {\n    super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidHexBooleanError'\n    });\n  }\n}\nexport class InvalidHexValueError extends BaseError {\n  constructor(value) {\n    super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidHexValueError'\n    });\n  }\n}\nexport class SizeOverflowError extends BaseError {\n  constructor({\n    givenSize,\n    maxSize\n  }) {\n    super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'SizeOverflowError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","IntegerOutOfRangeError","constructor","max","min","signed","size","value","Object","defineProperty","InvalidBytesBooleanError","bytes","InvalidHexBooleanError","hex","InvalidHexValueError","length","SizeOverflowError","givenSize","maxSize"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/viem/errors/encoding.ts"],"sourcesContent":["import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type IntegerOutOfRangeErrorType = IntegerOutOfRangeError & {\n  name: 'IntegerOutOfRangeError'\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  override name = 'IntegerOutOfRangeError'\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n    )\n  }\n}\n\nexport type InvalidBytesBooleanErrorType = InvalidBytesBooleanError & {\n  name: 'InvalidBytesBooleanError'\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  override name = 'InvalidBytesBooleanError'\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n    )\n  }\n}\n\nexport type InvalidHexBooleanErrorType = InvalidHexBooleanError & {\n  name: 'InvalidHexBooleanError'\n}\nexport class InvalidHexBooleanError extends BaseError {\n  override name = 'InvalidHexBooleanError'\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n    )\n  }\n}\n\nexport type InvalidHexValueErrorType = InvalidHexValueError & {\n  name: 'InvalidHexValueError'\n}\nexport class InvalidHexValueError extends BaseError {\n  override name = 'InvalidHexValueError'\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n    )\n  }\n}\n\nexport type SizeOverflowErrorType = SizeOverflowError & {\n  name: 'SizeOverflowError'\n}\nexport class SizeOverflowError extends BaseError {\n  override name = 'SizeOverflowError' as const\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n    )\n  }\n}\n"],"mappings":"AAEA,SAASA,SAAS,QAAQ,WAAW;AAKrC,OAAM,MAAOC,sBAAuB,SAAQD,SAAS;EAEnDE,YAAY;IACVC,GAAG;IACHC,GAAG;IACHC,MAAM;IACNC,IAAI;IACJC;EAAK,CAON;IACC,KAAK,CACH,WAAWA,KAAK,oBACdD,IAAI,GAAG,GAAGA,IAAI,GAAG,CAAC,QAAQD,MAAM,GAAG,QAAQ,GAAG,UAAU,GAAG,GAAG,EAChE,iBAAiBF,GAAG,GAAG,IAAIC,GAAG,OAAOD,GAAG,GAAG,GAAG,UAAUC,GAAG,GAAG,EAAE,CACjE;IAlBMI,MAAA,CAAAC,cAAA;;;;aAAO;;EAmBhB;;AAMF,OAAM,MAAOC,wBAAyB,SAAQV,SAAS;EAErDE,YAAYS,KAAgB;IAC1B,KAAK,CACH,gBAAgBA,KAAK,gGAAgG,CACtH;IAJMH,MAAA,CAAAC,cAAA;;;;aAAO;;EAKhB;;AAMF,OAAM,MAAOG,sBAAuB,SAAQZ,SAAS;EAEnDE,YAAYW,GAAQ;IAClB,KAAK,CACH,cAAcA,GAAG,gFAAgF,CAClG;IAJML,MAAA,CAAAC,cAAA;;;;aAAO;;EAKhB;;AAMF,OAAM,MAAOK,oBAAqB,SAAQd,SAAS;EAEjDE,YAAYK,KAAU;IACpB,KAAK,CACH,cAAcA,KAAK,uBAAuBA,KAAK,CAACQ,MAAM,+BAA+B,CACtF;IAJMP,MAAA,CAAAC,cAAA;;;;aAAO;;EAKhB;;AAMF,OAAM,MAAOO,iBAAkB,SAAQhB,SAAS;EAE9CE,YAAY;IAAEe,SAAS;IAAEC;EAAO,CAA0C;IACxE,KAAK,CACH,sBAAsBA,OAAO,uBAAuBD,SAAS,SAAS,CACvE;IAJMT,MAAA,CAAAC,cAAA;;;;aAAO;;EAKhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}