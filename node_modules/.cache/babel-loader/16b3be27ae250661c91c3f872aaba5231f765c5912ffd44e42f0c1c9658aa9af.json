{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseEther = void 0;\nconst unit_js_1 = require(\"../../constants/unit.js\");\nconst parseUnits_js_1 = require(\"./parseUnits.js\");\nfunction parseEther(ether, unit = 'wei') {\n  return (0, parseUnits_js_1.parseUnits)(ether, unit_js_1.etherUnits[unit]);\n}\nexports.parseEther = parseEther;","map":{"version":3,"names":["unit_js_1","require","parseUnits_js_1","parseEther","ether","unit","parseUnits","etherUnits","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/unit/parseEther.ts"],"sourcesContent":["import { etherUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseEtherErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of ether to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseEther.html\n *\n * @example\n * import { parseEther } from 'viem'\n *\n * parseEther('420')\n * // 420000000000000000000n\n */\nexport function parseEther(ether: string, unit: 'wei' | 'gwei' = 'wei') {\n  return parseUnits(ether, etherUnits[unit])\n}\n"],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AAGA,MAAAC,eAAA,GAAAD,OAAA;AAeA,SAAgBE,UAAUA,CAACC,KAAa,EAAEC,IAAA,GAAuB,KAAK;EACpE,OAAO,IAAAH,eAAA,CAAAI,UAAU,EAACF,KAAK,EAAEJ,SAAA,CAAAO,UAAU,CAACF,IAAI,CAAC,CAAC;AAC5C;AAFAG,OAAA,CAAAL,UAAA,GAAAA,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}