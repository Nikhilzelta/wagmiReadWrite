{"ast":null,"code":"import '@tanstack/react-query';\nimport '@wagmi/core';\nimport '@wagmi/core/internal';","map":{"version":3,"names":[],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/wagmi/src/types/properties.ts"],"sourcesContent":["import { type DefaultError, type QueryKey } from '@tanstack/react-query'\nimport { type Config } from '@wagmi/core'\nimport { type Omit } from '@wagmi/core/internal'\n\nimport type {\n  UseInfiniteQueryParameters,\n  UseQueryParameters,\n} from '../utils/query.js'\n\nexport type EnabledParameter = {\n  enabled?: boolean | undefined\n}\n\nexport type ConfigParameter<config extends Config = Config> = {\n  config?: Config | config | undefined\n}\n\nexport type QueryParameter<\n  queryFnData = unknown,\n  error = DefaultError,\n  data = queryFnData,\n  queryKey extends QueryKey = QueryKey,\n> = {\n  query?:\n    | Omit<\n        UseQueryParameters<queryFnData, error, data, queryKey>,\n        'queryFn' | 'queryHash' | 'queryKey' | 'queryKeyHashFn' | 'throwOnError'\n      >\n    | undefined\n}\n\nexport type InfiniteQueryParameter<\n  queryFnData = unknown,\n  error = DefaultError,\n  data = queryFnData,\n  queryData = queryFnData,\n  queryKey extends QueryKey = QueryKey,\n  pageParam = unknown,\n> = {\n  query: Omit<\n    UseInfiniteQueryParameters<\n      queryFnData,\n      error,\n      data,\n      queryData,\n      queryKey,\n      pageParam\n    >,\n    'queryFn' | 'queryHash' | 'queryKey' | 'queryKeyHashFn' | 'throwOnError'\n  >\n}\n"],"mappings":"AAAA,OAAiD,uBAAuB;AACxE,OAA4B,aAAa;AACzC,OAA0B,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}