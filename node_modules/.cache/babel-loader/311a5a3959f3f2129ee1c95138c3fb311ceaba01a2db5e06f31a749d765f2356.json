{"ast":null,"code":"import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n  constructor({\n    offset\n  }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'NegativeOffsetError'\n    });\n  }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  constructor({\n    length,\n    position\n  }) {\n    super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'PositionOutOfBoundsError'\n    });\n  }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n  constructor({\n    count,\n    limit\n  }) {\n    super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'RecursiveReadLimitExceededError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","NegativeOffsetError","constructor","offset","Object","defineProperty","PositionOutOfBoundsError","length","position","RecursiveReadLimitExceededError","count","limit"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/viem/errors/cursor.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type NegativeOffsetErrorType = NegativeOffsetError & {\n  name: 'NegativeOffsetError'\n}\nexport class NegativeOffsetError extends BaseError {\n  override name = 'NegativeOffsetError'\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`)\n  }\n}\n\nexport type PositionOutOfBoundsErrorType = PositionOutOfBoundsError & {\n  name: 'PositionOutOfBoundsError'\n}\nexport class PositionOutOfBoundsError extends BaseError {\n  override name = 'PositionOutOfBoundsError'\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n    )\n  }\n}\n\nexport type RecursiveReadLimitExceededErrorType =\n  RecursiveReadLimitExceededError & {\n    name: 'RecursiveReadLimitExceededError'\n  }\nexport class RecursiveReadLimitExceededError extends BaseError {\n  override name = 'RecursiveReadLimitExceededError'\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n    )\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AAKrC,OAAM,MAAOC,mBAAoB,SAAQD,SAAS;EAEhDE,YAAY;IAAEC;EAAM,CAAsB;IACxC,KAAK,CAAC,YAAYA,MAAM,wBAAwB,CAAC;IAF1CC,MAAA,CAAAC,cAAA;;;;aAAO;;EAGhB;;AAMF,OAAM,MAAOC,wBAAyB,SAAQN,SAAS;EAErDE,YAAY;IAAEK,MAAM;IAAEC;EAAQ,CAAwC;IACpE,KAAK,CACH,cAAcA,QAAQ,yCAAyCD,MAAM,MAAM,CAC5E;IAJMH,MAAA,CAAAC,cAAA;;;;aAAO;;EAKhB;;AAOF,OAAM,MAAOI,+BAAgC,SAAQT,SAAS;EAE5DE,YAAY;IAAEQ,KAAK;IAAEC;EAAK,CAAoC;IAC5D,KAAK,CACH,6BAA6BA,KAAK,wCAAwCD,KAAK,MAAM,CACtF;IAJMN,MAAA,CAAAC,cAAA;;;;aAAO;;EAKhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}