{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeTransaction = void 0;\nconst transaction_js_1 = require(\"../../errors/transaction.js\");\nconst concat_js_1 = require(\"../data/concat.js\");\nconst trim_js_1 = require(\"../data/trim.js\");\nconst toHex_js_1 = require(\"../encoding/toHex.js\");\nconst toRlp_js_1 = require(\"../encoding/toRlp.js\");\nconst assertTransaction_js_1 = require(\"./assertTransaction.js\");\nconst getTransactionType_js_1 = require(\"./getTransactionType.js\");\nconst serializeAccessList_js_1 = require(\"./serializeAccessList.js\");\nfunction serializeTransaction(transaction, signature) {\n  const type = (0, getTransactionType_js_1.getTransactionType)(transaction);\n  if (type === 'eip1559') return serializeTransactionEIP1559(transaction, signature);\n  if (type === 'eip2930') return serializeTransactionEIP2930(transaction, signature);\n  return serializeTransactionLegacy(transaction, signature);\n}\nexports.serializeTransaction = serializeTransaction;\nfunction serializeTransactionEIP1559(transaction, signature) {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data\n  } = transaction;\n  (0, assertTransaction_js_1.assertTransactionEIP1559)(transaction);\n  const serializedAccessList = (0, serializeAccessList_js_1.serializeAccessList)(accessList);\n  const serializedTransaction = [(0, toHex_js_1.toHex)(chainId), nonce ? (0, toHex_js_1.toHex)(nonce) : '0x', maxPriorityFeePerGas ? (0, toHex_js_1.toHex)(maxPriorityFeePerGas) : '0x', maxFeePerGas ? (0, toHex_js_1.toHex)(maxFeePerGas) : '0x', gas ? (0, toHex_js_1.toHex)(gas) : '0x', to ?? '0x', value ? (0, toHex_js_1.toHex)(value) : '0x', data ?? '0x', serializedAccessList];\n  if (signature) {\n    const yParity = (() => {\n      if (signature.v === 0n) return '0x';\n      if (signature.v === 1n) return (0, toHex_js_1.toHex)(1);\n      return signature.v === 27n ? '0x' : (0, toHex_js_1.toHex)(1);\n    })();\n    serializedTransaction.push(yParity, (0, trim_js_1.trim)(signature.r), (0, trim_js_1.trim)(signature.s));\n  }\n  return (0, concat_js_1.concatHex)(['0x02', (0, toRlp_js_1.toRlp)(serializedTransaction)]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n  const {\n    chainId,\n    gas,\n    data,\n    nonce,\n    to,\n    value,\n    accessList,\n    gasPrice\n  } = transaction;\n  (0, assertTransaction_js_1.assertTransactionEIP2930)(transaction);\n  const serializedAccessList = (0, serializeAccessList_js_1.serializeAccessList)(accessList);\n  const serializedTransaction = [(0, toHex_js_1.toHex)(chainId), nonce ? (0, toHex_js_1.toHex)(nonce) : '0x', gasPrice ? (0, toHex_js_1.toHex)(gasPrice) : '0x', gas ? (0, toHex_js_1.toHex)(gas) : '0x', to ?? '0x', value ? (0, toHex_js_1.toHex)(value) : '0x', data ?? '0x', serializedAccessList];\n  if (signature) {\n    const yParity = (() => {\n      if (signature.v === 0n) return '0x';\n      if (signature.v === 1n) return (0, toHex_js_1.toHex)(1);\n      return signature.v === 27n ? '0x' : (0, toHex_js_1.toHex)(1);\n    })();\n    serializedTransaction.push(yParity, (0, trim_js_1.trim)(signature.r), (0, trim_js_1.trim)(signature.s));\n  }\n  return (0, concat_js_1.concatHex)(['0x01', (0, toRlp_js_1.toRlp)(serializedTransaction)]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n  const {\n    chainId = 0,\n    gas,\n    data,\n    nonce,\n    to,\n    value,\n    gasPrice\n  } = transaction;\n  (0, assertTransaction_js_1.assertTransactionLegacy)(transaction);\n  let serializedTransaction = [nonce ? (0, toHex_js_1.toHex)(nonce) : '0x', gasPrice ? (0, toHex_js_1.toHex)(gasPrice) : '0x', gas ? (0, toHex_js_1.toHex)(gas) : '0x', to ?? '0x', value ? (0, toHex_js_1.toHex)(value) : '0x', data ?? '0x'];\n  if (signature) {\n    const v = (() => {\n      if (chainId > 0) return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n      if (signature.v >= 35n) {\n        const inferredChainId = (signature.v - 35n) / 2n;\n        if (inferredChainId > 0) return signature.v;\n        return 27n + (signature.v === 35n ? 0n : 1n);\n      }\n      const v = 27n + (signature.v === 27n ? 0n : 1n);\n      if (signature.v !== v) throw new transaction_js_1.InvalidLegacyVError({\n        v: signature.v\n      });\n      return v;\n    })();\n    serializedTransaction = [...serializedTransaction, (0, toHex_js_1.toHex)(v), signature.r, signature.s];\n  } else if (chainId > 0) {\n    serializedTransaction = [...serializedTransaction, (0, toHex_js_1.toHex)(chainId), '0x', '0x'];\n  }\n  return (0, toRlp_js_1.toRlp)(serializedTransaction);\n}","map":{"version":3,"names":["transaction_js_1","require","concat_js_1","trim_js_1","toHex_js_1","toRlp_js_1","assertTransaction_js_1","getTransactionType_js_1","serializeAccessList_js_1","serializeTransaction","transaction","signature","type","getTransactionType","serializeTransactionEIP1559","serializeTransactionEIP2930","serializeTransactionLegacy","exports","chainId","gas","nonce","to","value","maxFeePerGas","maxPriorityFeePerGas","accessList","data","assertTransactionEIP1559","serializedAccessList","serializeAccessList","serializedTransaction","toHex","yParity","v","push","trim","r","s","concatHex","toRlp","gasPrice","assertTransactionEIP2930","assertTransactionLegacy","BigInt","inferredChainId","InvalidLegacyVError"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/transaction/serializeTransaction.ts"],"sourcesContent":["import {\n  InvalidLegacyVError,\n  type InvalidLegacyVErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Signature } from '../../types/misc.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from '../../types/transaction.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport { trim } from '../data/trim.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\nimport { type ToRlpErrorType, toRlp } from '../encoding/toRlp.js'\n\nimport {\n  type AssertTransactionEIP1559ErrorType,\n  type AssertTransactionEIP2930ErrorType,\n  type AssertTransactionLegacyErrorType,\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetTransactionType,\n  type GetTransationTypeErrorType,\n  getTransactionType,\n} from './getTransactionType.js'\nimport {\n  type SerializeAccessListErrorType,\n  serializeAccessList,\n} from './serializeAccessList.js'\n\nexport type SerializedTransactionReturnType<\n  TTransactionSerializable extends\n    TransactionSerializable = TransactionSerializable,\n  TTransactionType extends\n    TransactionType = GetTransactionType<TTransactionSerializable>,\n> = TransactionSerialized<TTransactionType>\n\nexport type SerializeTransactionFn<\n  TTransactionSerializable extends\n    TransactionSerializable = TransactionSerializable,\n> = typeof serializeTransaction<TTransactionSerializable>\n\nexport type SerializeTransactionErrorType =\n  | GetTransationTypeErrorType\n  | SerializeTransactionEIP1559ErrorType\n  | SerializeTransactionEIP2930ErrorType\n  | SerializeTransactionLegacyErrorType\n  | ErrorType\n\nexport function serializeTransaction<\n  TTransactionSerializable extends TransactionSerializable,\n>(\n  transaction: TTransactionSerializable,\n  signature?: Signature,\n): SerializedTransactionReturnType<TTransactionSerializable> {\n  const type = getTransactionType(transaction) as GetTransactionType\n\n  if (type === 'eip1559')\n    return serializeTransactionEIP1559(\n      transaction as TransactionSerializableEIP1559,\n      signature,\n    ) as SerializedTransactionReturnType<TTransactionSerializable>\n\n  if (type === 'eip2930')\n    return serializeTransactionEIP2930(\n      transaction as TransactionSerializableEIP2930,\n      signature,\n    ) as SerializedTransactionReturnType<TTransactionSerializable>\n\n  return serializeTransactionLegacy(\n    transaction as TransactionSerializableLegacy,\n    signature,\n  ) as SerializedTransactionReturnType<TTransactionSerializable>\n}\n\ntype SerializeTransactionEIP1559ErrorType =\n  | AssertTransactionEIP1559ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n  signature?: Signature,\n): TransactionSerializedEIP1559 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP1559(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n  ]\n\n  if (signature) {\n    const yParity = (() => {\n      if (signature.v === 0n) return '0x'\n      if (signature.v === 1n) return toHex(1)\n\n      return signature.v === 27n ? '0x' : toHex(1)\n    })()\n    serializedTransaction.push(yParity, trim(signature.r), trim(signature.s))\n  }\n\n  return concatHex([\n    '0x02',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP1559\n}\n\ntype SerializeTransactionEIP2930ErrorType =\n  | AssertTransactionEIP2930ErrorType\n  | ConcatHexErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | SerializeAccessListErrorType\n  | ErrorType\n\nfunction serializeTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n  signature?: Signature,\n): TransactionSerializedEIP2930 {\n  const { chainId, gas, data, nonce, to, value, accessList, gasPrice } =\n    transaction\n\n  assertTransactionEIP2930(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n  ]\n\n  if (signature) {\n    const yParity = (() => {\n      if (signature.v === 0n) return '0x'\n      if (signature.v === 1n) return toHex(1)\n\n      return signature.v === 27n ? '0x' : toHex(1)\n    })()\n    serializedTransaction.push(yParity, trim(signature.r), trim(signature.s))\n  }\n\n  return concatHex([\n    '0x01',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP2930\n}\n\ntype SerializeTransactionLegacyErrorType =\n  | AssertTransactionLegacyErrorType\n  | InvalidLegacyVErrorType\n  | ToHexErrorType\n  | ToRlpErrorType\n  | ErrorType\n\nfunction serializeTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n  signature?: Signature,\n): TransactionSerializedLegacy {\n  const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction\n\n  assertTransactionLegacy(transaction)\n\n  let serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n  ]\n\n  if (signature) {\n    const v = (() => {\n      // EIP-155 (explicit chainId)\n      if (chainId > 0)\n        return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n)\n\n      // EIP-155 (inferred chainId)\n      if (signature.v >= 35n) {\n        const inferredChainId = (signature.v - 35n) / 2n\n        if (inferredChainId > 0) return signature.v\n        return 27n + (signature.v === 35n ? 0n : 1n)\n      }\n\n      // Pre-EIP-155 (no chainId)\n      const v = 27n + (signature.v === 27n ? 0n : 1n)\n      if (signature.v !== v) throw new InvalidLegacyVError({ v: signature.v })\n      return v\n    })()\n\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(v),\n      signature.r,\n      signature.s,\n    ]\n  } else if (chainId > 0) {\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(chainId),\n      '0x',\n      '0x',\n    ]\n  }\n\n  return toRlp(serializedTransaction)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}