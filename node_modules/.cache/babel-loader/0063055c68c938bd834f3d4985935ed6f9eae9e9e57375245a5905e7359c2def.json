{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEventFilter = void 0;\nconst encodeEventTopics_js_1 = require(\"../../utils/abi/encodeEventTopics.js\");\nconst toHex_js_1 = require(\"../../utils/encoding/toHex.js\");\nconst createFilterRequestScope_js_1 = require(\"../../utils/filters/createFilterRequestScope.js\");\nasync function createEventFilter(client, {\n  address,\n  args,\n  event,\n  events: events_,\n  fromBlock,\n  strict,\n  toBlock\n} = {}) {\n  const events = events_ ?? (event ? [event] : undefined);\n  const getRequest = (0, createFilterRequestScope_js_1.createFilterRequestScope)(client, {\n    method: 'eth_newFilter'\n  });\n  let topics = [];\n  if (events) {\n    topics = [events.flatMap(event => (0, encodeEventTopics_js_1.encodeEventTopics)({\n      abi: [event],\n      eventName: event.name,\n      args\n    }))];\n    if (event) topics = topics[0];\n  }\n  const id = await client.request({\n    method: 'eth_newFilter',\n    params: [{\n      address,\n      fromBlock: typeof fromBlock === 'bigint' ? (0, toHex_js_1.numberToHex)(fromBlock) : fromBlock,\n      toBlock: typeof toBlock === 'bigint' ? (0, toHex_js_1.numberToHex)(toBlock) : toBlock,\n      ...(topics.length ? {\n        topics\n      } : {})\n    }]\n  });\n  return {\n    abi: events,\n    args,\n    eventName: event ? event.name : undefined,\n    fromBlock,\n    id,\n    request: getRequest(id),\n    strict,\n    toBlock,\n    type: 'event'\n  };\n}\nexports.createEventFilter = createEventFilter;","map":{"version":3,"names":["encodeEventTopics_js_1","require","toHex_js_1","createFilterRequestScope_js_1","createEventFilter","client","address","args","event","events","events_","fromBlock","strict","toBlock","undefined","getRequest","createFilterRequestScope","method","topics","flatMap","encodeEventTopics","abi","eventName","name","id","request","params","numberToHex","length","type","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/actions/public/createEventFilter.ts"],"sourcesContent":["import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex, LogTopic } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateEventFilterParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n> = {\n  address?: Address | Address[]\n  fromBlock?: TFromBlock | BlockNumber | BlockTag\n  toBlock?: TToBlock | BlockNumber | BlockTag\n} & (MaybeExtractEventArgsFromAbi<\n  TAbiEvents,\n  _EventName\n> extends infer TEventFilterArgs\n  ?\n      | {\n          args:\n            | TEventFilterArgs\n            | (_Args extends TEventFilterArgs ? _Args : never)\n          event: TAbiEvent\n          events?: never\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: TAbiEvent\n          events?: never\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: never\n          events: TAbiEvents\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: never\n          events?: never\n          strict?: never\n        }\n  : {\n      args?: never\n      event?: never\n      events?: never\n      strict?: never\n    })\n\nexport type CreateEventFilterReturnType<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n> = Prettify<\n  Filter<'event', TAbiEvents, _EventName, _Args, TStrict, TFromBlock, TToBlock>\n>\n\nexport type CreateEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createEventFilter.html\n * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n *\n * @param client - Client to use\n * @param parameters - {@link CreateEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * })\n */\nexport async function createEventFilter<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    args,\n    event,\n    events: events_,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateEventFilterParameters<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  > = {} as any,\n): Promise<\n  CreateEventFilterReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  >\n> {\n  const events = events_ ?? (event ? [event] : undefined)\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  let topics: LogTopic[] = []\n  if (events) {\n    topics = [\n      (events as AbiEvent[]).flatMap((event) =>\n        encodeEventTopics({\n          abi: [event],\n          eventName: (event as AbiEvent).name,\n          args,\n        } as EncodeEventTopicsParameters),\n      ),\n    ]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        ...(topics.length ? { topics } : {}),\n      },\n    ],\n  })\n\n  return {\n    abi: events,\n    args,\n    eventName: event ? (event as AbiEvent).name : undefined,\n    fromBlock,\n    id,\n    request: getRequest(id),\n    strict,\n    toBlock,\n    type: 'event',\n  } as unknown as CreateEventFilterReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  >\n}\n"],"mappings":";;;;;;AAcA,MAAAA,sBAAA,GAAAC,OAAA;AAMA,MAAAC,UAAA,GAAAD,OAAA;AAIA,MAAAE,6BAAA,GAAAF,OAAA;AAmHO,eAAeG,iBAAiBA,CAerCC,MAAiC,EACjC;EACEC,OAAO;EACPC,IAAI;EACJC,KAAK;EACLC,MAAM,EAAEC,OAAO;EACfC,SAAS;EACTC,MAAM;EACNC;AAAO,IASL,EAAS;EAYb,MAAMJ,MAAM,GAAGC,OAAO,KAAKF,KAAK,GAAG,CAACA,KAAK,CAAC,GAAGM,SAAS,CAAC;EAEvD,MAAMC,UAAU,GAAG,IAAAZ,6BAAA,CAAAa,wBAAwB,EAACX,MAAM,EAAE;IAClDY,MAAM,EAAE;GACT,CAAC;EAEF,IAAIC,MAAM,GAAe,EAAE;EAC3B,IAAIT,MAAM,EAAE;IACVS,MAAM,GAAG,CACNT,MAAqB,CAACU,OAAO,CAAEX,KAAK,IACnC,IAAAR,sBAAA,CAAAoB,iBAAiB,EAAC;MAChBC,GAAG,EAAE,CAACb,KAAK,CAAC;MACZc,SAAS,EAAGd,KAAkB,CAACe,IAAI;MACnChB;KAC8B,CAAC,CAClC,CACF;IACD,IAAIC,KAAK,EAAEU,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAe;;EAG7C,MAAMM,EAAE,GAAQ,MAAMnB,MAAM,CAACoB,OAAO,CAAC;IACnCR,MAAM,EAAE,eAAe;IACvBS,MAAM,EAAE,CACN;MACEpB,OAAO;MACPK,SAAS,EACP,OAAOA,SAAS,KAAK,QAAQ,GAAG,IAAAT,UAAA,CAAAyB,WAAW,EAAChB,SAAS,CAAC,GAAGA,SAAS;MACpEE,OAAO,EAAE,OAAOA,OAAO,KAAK,QAAQ,GAAG,IAAAX,UAAA,CAAAyB,WAAW,EAACd,OAAO,CAAC,GAAGA,OAAO;MACrE,IAAIK,MAAM,CAACU,MAAM,GAAG;QAAEV;MAAM,CAAE,GAAG,EAAE;KACpC;GAEJ,CAAC;EAEF,OAAO;IACLG,GAAG,EAAEZ,MAAM;IACXF,IAAI;IACJe,SAAS,EAAEd,KAAK,GAAIA,KAAkB,CAACe,IAAI,GAAGT,SAAS;IACvDH,SAAS;IACTa,EAAE;IACFC,OAAO,EAAEV,UAAU,CAACS,EAAE,CAAC;IACvBZ,MAAM;IACNC,OAAO;IACPgB,IAAI,EAAE;GASP;AACH;AAhGAC,OAAA,CAAA1B,iBAAA,GAAAA,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}