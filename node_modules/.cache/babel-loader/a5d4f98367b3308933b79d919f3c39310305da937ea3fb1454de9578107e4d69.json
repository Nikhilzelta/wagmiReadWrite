{"ast":null,"code":"import '../types/utils.js';\nimport { deepEqual } from '../utils/deepEqual.js';\nlet previousConnections = [];\n/** https://wagmi.sh/core/api/actions/getConnections */\nexport function getConnections(config) {\n  const connections = [...config.state.connections.values()];\n  if (config.state.status === 'reconnecting') return previousConnections;\n  if (deepEqual(previousConnections, connections)) return previousConnections;\n  previousConnections = connections;\n  return connections;\n}","map":{"version":3,"names":["deepEqual","previousConnections","getConnections","config","connections","state","values","status"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@wagmi/core/src/actions/getConnections.ts"],"sourcesContent":["import type { Config, Connection } from '../createConfig.js'\nimport { type Evaluate } from '../types/utils.js'\nimport { deepEqual } from '../utils/deepEqual.js'\n\nexport type GetConnectionsReturnType = Evaluate<Connection>[]\n\nlet previousConnections: Connection[] = []\n\n/** https://wagmi.sh/core/api/actions/getConnections */\nexport function getConnections(config: Config): GetConnectionsReturnType {\n  const connections = [...config.state.connections.values()]\n  if (config.state.status === 'reconnecting') return previousConnections\n  if (deepEqual(previousConnections, connections)) return previousConnections\n  previousConnections = connections\n  return connections\n}\n"],"mappings":"AACA,OAA8B,mBAAmB;AACjD,SAASA,SAAS,QAAQ,uBAAuB;AAIjD,IAAIC,mBAAmB,GAAiB,EAAE;AAE1C;AACA,OAAM,SAAUC,cAAcA,CAACC,MAAc;EAC3C,MAAMC,WAAW,GAAG,CAAC,GAAGD,MAAM,CAACE,KAAK,CAACD,WAAW,CAACE,MAAM,EAAE,CAAC;EAC1D,IAAIH,MAAM,CAACE,KAAK,CAACE,MAAM,KAAK,cAAc,EAAE,OAAON,mBAAmB;EACtE,IAAID,SAAS,CAACC,mBAAmB,EAAEG,WAAW,CAAC,EAAE,OAAOH,mBAAmB;EAC3EA,mBAAmB,GAAGG,WAAW;EACjC,OAAOA,WAAW;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}