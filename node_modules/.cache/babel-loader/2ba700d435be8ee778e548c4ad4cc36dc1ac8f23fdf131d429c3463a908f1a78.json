{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidAddressError = void 0;\nconst base_js_1 = require(\"./base.js\");\nclass InvalidAddressError extends base_js_1.BaseError {\n  constructor({\n    address\n  }) {\n    super(`Address \"${address}\" is invalid.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAddressError'\n    });\n  }\n}\nexports.InvalidAddressError = InvalidAddressError;","map":{"version":3,"names":["base_js_1","require","InvalidAddressError","BaseError","constructor","address","Object","defineProperty","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/errors/address.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  override name = 'InvalidAddressError'\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`)\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AAKA,MAAaC,mBAAoB,SAAQF,SAAA,CAAAG,SAAS;EAEhDC,YAAY;IAAEC;EAAO,CAAuB;IAC1C,KAAK,CAAC,YAAYA,OAAO,eAAe,CAAC;IAFlCC,MAAA,CAAAC,cAAA;;;;aAAO;;EAGhB;;AAJFC,OAAA,CAAAN,mBAAA,GAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}