{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeErrorResult = void 0;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst concat_js_1 = require(\"../data/concat.js\");\nconst getFunctionSelector_js_1 = require(\"../hash/getFunctionSelector.js\");\nconst encodeAbiParameters_js_1 = require(\"./encodeAbiParameters.js\");\nconst formatAbiItem_js_1 = require(\"./formatAbiItem.js\");\nconst getAbiItem_js_1 = require(\"./getAbiItem.js\");\nconst docsPath = '/docs/contract/encodeErrorResult';\nfunction encodeErrorResult({\n  abi,\n  errorName,\n  args\n}) {\n  let abiItem = abi[0];\n  if (errorName) {\n    abiItem = (0, getAbiItem_js_1.getAbiItem)({\n      abi,\n      args,\n      name: errorName\n    });\n    if (!abiItem) throw new abi_js_1.AbiErrorNotFoundError(errorName, {\n      docsPath\n    });\n  }\n  if (abiItem.type !== 'error') throw new abi_js_1.AbiErrorNotFoundError(undefined, {\n    docsPath\n  });\n  const definition = (0, formatAbiItem_js_1.formatAbiItem)(abiItem);\n  const signature = (0, getFunctionSelector_js_1.getFunctionSelector)(definition);\n  let data = '0x';\n  if (args && args.length > 0) {\n    if (!abiItem.inputs) throw new abi_js_1.AbiErrorInputsNotFoundError(abiItem.name, {\n      docsPath\n    });\n    data = (0, encodeAbiParameters_js_1.encodeAbiParameters)(abiItem.inputs, args);\n  }\n  return (0, concat_js_1.concatHex)([signature, data]);\n}\nexports.encodeErrorResult = encodeErrorResult;","map":{"version":3,"names":["abi_js_1","require","concat_js_1","getFunctionSelector_js_1","encodeAbiParameters_js_1","formatAbiItem_js_1","getAbiItem_js_1","docsPath","encodeErrorResult","abi","errorName","args","abiItem","getAbiItem","name","AbiErrorNotFoundError","type","undefined","definition","formatAbiItem","signature","getFunctionSelector","data","length","inputs","AbiErrorInputsNotFoundError","encodeAbiParameters","concatHex","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/abi/encodeErrorResult.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiErrorInputsNotFoundError,\n  AbiErrorNotFoundError,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  GetErrorArgs,\n  InferErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../hash/getFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeErrorResult'\n\nexport type EncodeErrorResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TErrorName extends string | undefined = string,\n  _ErrorName = InferErrorName<TAbi, TErrorName>,\n> = {\n  errorName?: _ErrorName\n} & (TErrorName extends string\n  ? { abi: TAbi } & GetErrorArgs<TAbi, TErrorName>\n  : _ErrorName extends string\n    ? { abi: [TAbi[number]] } & GetErrorArgs<TAbi, _ErrorName>\n    : never)\n\nexport type EncodeErrorResultErrorType =\n  | GetAbiItemErrorType\n  | FormatAbiItemErrorType\n  | GetFunctionSelectorErrorType\n  | EncodeAbiParametersErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function encodeErrorResult<\n  const TAbi extends Abi | readonly unknown[],\n  TErrorName extends string | undefined = undefined,\n>({ abi, errorName, args }: EncodeErrorResultParameters<TAbi, TErrorName>) {\n  let abiItem = abi[0] as AbiItem\n  if (errorName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: errorName,\n    } as GetAbiItemParameters)\n    if (!abiItem) throw new AbiErrorNotFoundError(errorName, { docsPath })\n  }\n\n  if (abiItem.type !== 'error')\n    throw new AbiErrorNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getFunctionSelector(definition)\n\n  let data: Hex = '0x'\n  if (args && (args as readonly unknown[]).length > 0) {\n    if (!abiItem.inputs)\n      throw new AbiErrorInputsNotFoundError(abiItem.name, { docsPath })\n    data = encodeAbiParameters(abiItem.inputs, args as readonly unknown[])\n  }\n  return concatHex([signature, data])\n}\n"],"mappings":";;;;;;AAEA,MAAAA,QAAA,GAAAC,OAAA;AAUA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,wBAAA,GAAAF,OAAA;AAMA,MAAAG,wBAAA,GAAAH,OAAA;AAIA,MAAAI,kBAAA,GAAAJ,OAAA;AACA,MAAAK,eAAA,GAAAL,OAAA;AAMA,MAAMM,QAAQ,GAAG,kCAAkC;AAsBnD,SAAgBC,iBAAiBA,CAG/B;EAAEC,GAAG;EAAEC,SAAS;EAAEC;AAAI,CAAiD;EACvE,IAAIC,OAAO,GAAGH,GAAG,CAAC,CAAC,CAAY;EAC/B,IAAIC,SAAS,EAAE;IACbE,OAAO,GAAG,IAAAN,eAAA,CAAAO,UAAU,EAAC;MACnBJ,GAAG;MACHE,IAAI;MACJG,IAAI,EAAEJ;KACiB,CAAC;IAC1B,IAAI,CAACE,OAAO,EAAE,MAAM,IAAIZ,QAAA,CAAAe,qBAAqB,CAACL,SAAS,EAAE;MAAEH;IAAQ,CAAE,CAAC;;EAGxE,IAAIK,OAAO,CAACI,IAAI,KAAK,OAAO,EAC1B,MAAM,IAAIhB,QAAA,CAAAe,qBAAqB,CAACE,SAAS,EAAE;IAAEV;EAAQ,CAAE,CAAC;EAE1D,MAAMW,UAAU,GAAG,IAAAb,kBAAA,CAAAc,aAAa,EAACP,OAAO,CAAC;EACzC,MAAMQ,SAAS,GAAG,IAAAjB,wBAAA,CAAAkB,mBAAmB,EAACH,UAAU,CAAC;EAEjD,IAAII,IAAI,GAAQ,IAAI;EACpB,IAAIX,IAAI,IAAKA,IAA2B,CAACY,MAAM,GAAG,CAAC,EAAE;IACnD,IAAI,CAACX,OAAO,CAACY,MAAM,EACjB,MAAM,IAAIxB,QAAA,CAAAyB,2BAA2B,CAACb,OAAO,CAACE,IAAI,EAAE;MAAEP;IAAQ,CAAE,CAAC;IACnEe,IAAI,GAAG,IAAAlB,wBAAA,CAAAsB,mBAAmB,EAACd,OAAO,CAACY,MAAM,EAAEb,IAA0B,CAAC;;EAExE,OAAO,IAAAT,WAAA,CAAAyB,SAAS,EAAC,CAACP,SAAS,EAAEE,IAAI,CAAC,CAAC;AACrC;AA3BAM,OAAA,CAAApB,iBAAA,GAAAA,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}