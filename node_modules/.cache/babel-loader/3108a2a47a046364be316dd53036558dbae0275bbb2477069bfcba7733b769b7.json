{"ast":null,"code":"import { BaseError } from '../../errors/base.js';\nexport class BytecodeLengthExceedsMaxSizeError extends BaseError {\n  constructor({\n    givenLength,\n    maxBytecodeSize\n  }) {\n    super(`Bytecode cannot be longer than ${maxBytecodeSize} bytes. Given length: ${givenLength}`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'BytecodeLengthExceedsMaxSizeError'\n    });\n  }\n}\nexport class BytecodeLengthInWordsMustBeOddError extends BaseError {\n  constructor({\n    givenLengthInWords\n  }) {\n    super(`Bytecode length in 32-byte words must be odd. Given length in words: ${givenLengthInWords}`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'BytecodeLengthInWordsMustBeOddError'\n    });\n  }\n}\nexport class BytecodeLengthMustBeDivisibleBy32Error extends BaseError {\n  constructor({\n    givenLength\n  }) {\n    super(`The bytecode length in bytes must be divisible by 32. Given length: ${givenLength}`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'BytecodeLengthMustBeDivisibleBy32Error'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","BytecodeLengthExceedsMaxSizeError","constructor","givenLength","maxBytecodeSize","Object","defineProperty","BytecodeLengthInWordsMustBeOddError","givenLengthInWords","BytecodeLengthMustBeDivisibleBy32Error"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/viem/zksync/errors/bytecode.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\n\nexport type BytecodeLengthExceedsMaxSizeErrorType =\n  BytecodeLengthExceedsMaxSizeError & {\n    name: 'BytecodeLengthExceedsMaxSizeError'\n  }\n\nexport class BytecodeLengthExceedsMaxSizeError extends BaseError {\n  override name = 'BytecodeLengthExceedsMaxSizeError'\n  constructor({\n    givenLength,\n    maxBytecodeSize,\n  }: { givenLength: number; maxBytecodeSize: bigint }) {\n    super(\n      `Bytecode cannot be longer than ${maxBytecodeSize} bytes. Given length: ${givenLength}`,\n    )\n  }\n}\n\nexport type BytecodeLengthInWordsMustBeOddErrorType =\n  BytecodeLengthInWordsMustBeOddError & {\n    name: 'BytecodeLengthInWordsMustBeOddError'\n  }\n\nexport class BytecodeLengthInWordsMustBeOddError extends BaseError {\n  override name = 'BytecodeLengthInWordsMustBeOddError'\n  constructor({ givenLengthInWords }: { givenLengthInWords: number }) {\n    super(\n      `Bytecode length in 32-byte words must be odd. Given length in words: ${givenLengthInWords}`,\n    )\n  }\n}\n\nexport type BytecodeLengthMustBeDivisibleBy32ErrorType =\n  BytecodeLengthMustBeDivisibleBy32Error & {\n    name: 'BytecodeLengthMustBeDivisibleBy32Error'\n  }\n\nexport class BytecodeLengthMustBeDivisibleBy32Error extends BaseError {\n  override name = 'BytecodeLengthMustBeDivisibleBy32Error'\n  constructor({ givenLength }: { givenLength: number }) {\n    super(\n      `The bytecode length in bytes must be divisible by 32. Given length: ${givenLength}`,\n    )\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,sBAAsB;AAOhD,OAAM,MAAOC,iCAAkC,SAAQD,SAAS;EAE9DE,YAAY;IACVC,WAAW;IACXC;EAAe,CACkC;IACjD,KAAK,CACH,kCAAkCA,eAAe,yBAAyBD,WAAW,EAAE,CACxF;IAPME,MAAA,CAAAC,cAAA;;;;aAAO;;EAQhB;;AAQF,OAAM,MAAOC,mCAAoC,SAAQP,SAAS;EAEhEE,YAAY;IAAEM;EAAkB,CAAkC;IAChE,KAAK,CACH,wEAAwEA,kBAAkB,EAAE,CAC7F;IAJMH,MAAA,CAAAC,cAAA;;;;aAAO;;EAKhB;;AAQF,OAAM,MAAOG,sCAAuC,SAAQT,SAAS;EAEnEE,YAAY;IAAEC;EAAW,CAA2B;IAClD,KAAK,CACH,uEAAuEA,WAAW,EAAE,CACrF;IAJME,MAAA,CAAAC,cAAA;;;;aAAO;;EAKhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}