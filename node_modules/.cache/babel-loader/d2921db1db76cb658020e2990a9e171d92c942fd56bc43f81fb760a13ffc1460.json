{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.switchChain = void 0;\nconst toHex_js_1 = require(\"../../utils/encoding/toHex.js\");\nasync function switchChain(client, {\n  id\n}) {\n  await client.request({\n    method: 'wallet_switchEthereumChain',\n    params: [{\n      chainId: (0, toHex_js_1.numberToHex)(id)\n    }]\n  });\n}\nexports.switchChain = switchChain;","map":{"version":3,"names":["toHex_js_1","require","switchChain","client","id","request","method","params","chainId","numberToHex","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/actions/wallet/switchChain.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SwitchChainParameters = {\n  /** ID of Chain to switch to */\n  id: Chain['id']\n}\n\nexport type SwitchChainErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Switch the target chain in a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/switchChain.html\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n *\n * @param client - Client to use\n * @param parameters - {@link SwitchChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet, optimism } from 'viem/chains'\n * import { switchChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * await switchChain(client, { id: optimism.id })\n */\nexport async function switchChain<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(client: Client<Transport, TChain, TAccount>, { id }: SwitchChainParameters) {\n  await client.request({\n    method: 'wallet_switchEthereumChain',\n    params: [\n      {\n        chainId: numberToHex(id),\n      },\n    ],\n  })\n}\n"],"mappings":";;;;;;AAMA,MAAAA,UAAA,GAAAC,OAAA;AAmCO,eAAeC,WAAWA,CAG/BC,MAA2C,EAAE;EAAEC;AAAE,CAAyB;EAC1E,MAAMD,MAAM,CAACE,OAAO,CAAC;IACnBC,MAAM,EAAE,4BAA4B;IACpCC,MAAM,EAAE,CACN;MACEC,OAAO,EAAE,IAAAR,UAAA,CAAAS,WAAW,EAACL,EAAE;KACxB;GAEJ,CAAC;AACJ;AAZAM,OAAA,CAAAR,WAAA,GAAAA,WAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}