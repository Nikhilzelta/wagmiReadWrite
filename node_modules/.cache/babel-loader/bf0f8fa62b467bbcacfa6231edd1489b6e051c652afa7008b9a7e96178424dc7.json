{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isBytesEqual = void 0;\nconst utils_1 = require(\"@noble/curves/abstract/utils\");\nconst toBytes_js_1 = require(\"../encoding/toBytes.js\");\nconst isHex_js_1 = require(\"./isHex.js\");\nfunction isBytesEqual(a_, b_) {\n  const a = (0, isHex_js_1.isHex)(a_) ? (0, toBytes_js_1.toBytes)(a_) : a_;\n  const b = (0, isHex_js_1.isHex)(b_) ? (0, toBytes_js_1.toBytes)(b_) : b_;\n  return (0, utils_1.equalBytes)(a, b);\n}\nexports.isBytesEqual = isBytesEqual;","map":{"version":3,"names":["utils_1","require","toBytes_js_1","isHex_js_1","isBytesEqual","a_","b_","a","isHex","toBytes","b","equalBytes","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/data/isBytesEqual.ts"],"sourcesContent":["import { equalBytes } from '@noble/curves/abstract/utils'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type IsBytesEqualErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function isBytesEqual(a_: ByteArray | Hex, b_: ByteArray | Hex) {\n  const a = isHex(a_) ? toBytes(a_) : a_\n  const b = isHex(b_) ? toBytes(b_) : b_\n  return equalBytes(a, b)\n}\n"],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAIA,MAAAC,YAAA,GAAAD,OAAA;AACA,MAAAE,UAAA,GAAAF,OAAA;AAOA,SAAgBG,YAAYA,CAACC,EAAmB,EAAEC,EAAmB;EACnE,MAAMC,CAAC,GAAG,IAAAJ,UAAA,CAAAK,KAAK,EAACH,EAAE,CAAC,GAAG,IAAAH,YAAA,CAAAO,OAAO,EAACJ,EAAE,CAAC,GAAGA,EAAE;EACtC,MAAMK,CAAC,GAAG,IAAAP,UAAA,CAAAK,KAAK,EAACF,EAAE,CAAC,GAAG,IAAAJ,YAAA,CAAAO,OAAO,EAACH,EAAE,CAAC,GAAGA,EAAE;EACtC,OAAO,IAAAN,OAAA,CAAAW,UAAU,EAACJ,CAAC,EAAEG,CAAC,CAAC;AACzB;AAJAE,OAAA,CAAAR,YAAA,GAAAA,YAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}