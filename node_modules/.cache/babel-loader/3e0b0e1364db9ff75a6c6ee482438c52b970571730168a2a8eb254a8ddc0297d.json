{"ast":null,"code":"import 'viem';\nimport { prepareTransactionRequest as viem_prepareTransactionRequest } from 'viem/actions';\nimport '../createConfig.js';\nimport '../types/chain.js';\nimport '../types/properties.js';\nimport '../types/utils.js';\nimport { getAction } from '../utils/getAction.js';\nimport { getConnectorClient } from './getConnectorClient.js';\n/** https://wagmi.sh/core/api/actions/prepareTransactionRequest */\nexport async function prepareTransactionRequest(config, parameters) {\n  const {\n    account,\n    chainId,\n    connector,\n    ...rest\n  } = parameters;\n  let client;\n  if (typeof account === 'object' && account.type === 'local') client = config.getClient({\n    chainId\n  });else client = await getConnectorClient(config, {\n    account,\n    chainId,\n    connector\n  });\n  const action = getAction(client, viem_prepareTransactionRequest, 'prepareTransactionRequest');\n  return action({\n    ...rest,\n    ...(account ? {\n      account\n    } : {})\n  });\n}","map":{"version":3,"names":["prepareTransactionRequest","viem_prepareTransactionRequest","getAction","getConnectorClient","config","parameters","account","chainId","connector","rest","client","type","getClient","action"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@wagmi/core/src/actions/prepareTransactionRequest.ts"],"sourcesContent":["import {\n  type Account,\n  type Address,\n  type Chain,\n  type PrepareTransactionRequestErrorType as viem_PrepareTransactionRequestErrorType,\n  type PrepareTransactionRequestParameters as viem_PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestRequest as viem_PrepareTransactionRequestRequest,\n  type PrepareTransactionRequestReturnType as viem_PrepareTransactionRequestReturnType,\n} from 'viem'\nimport { prepareTransactionRequest as viem_prepareTransactionRequest } from 'viem/actions'\n\nimport { type Config } from '../createConfig.js'\nimport { type SelectChains } from '../types/chain.js'\nimport {\n  type ChainIdParameter,\n  type ConnectorParameter,\n} from '../types/properties.js'\nimport {\n  type Evaluate,\n  type IsNarrowable,\n  type UnionEvaluate,\n  type UnionOmit,\n} from '../types/utils.js'\nimport { getAction } from '../utils/getAction.js'\nimport { getConnectorClient } from './getConnectorClient.js'\n\nexport type PrepareTransactionRequestParameters<\n  config extends Config = Config,\n  chainId extends\n    | config['chains'][number]['id']\n    | undefined = config['chains'][number]['id'],\n  request extends viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>[0],\n    SelectChains<config, chainId>[0]\n  > = viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>[0],\n    SelectChains<config, chainId>[0]\n  >,\n  ///\n  chains extends readonly Chain[] = SelectChains<config, chainId>,\n> = {\n  [key in keyof chains]: UnionEvaluate<\n    UnionOmit<\n      viem_PrepareTransactionRequestParameters<\n        chains[key],\n        Account,\n        chains[key],\n        Account | Address,\n        request extends viem_PrepareTransactionRequestRequest<\n          chains[key],\n          chains[key]\n        >\n          ? request\n          : never\n      >,\n      'chain'\n    > &\n      ChainIdParameter<config, chainId> &\n      ConnectorParameter & {\n        to: Address\n      }\n  >\n}[number]\n\nexport type PrepareTransactionRequestReturnType<\n  config extends Config = Config,\n  chainId extends\n    | config['chains'][number]['id']\n    | undefined = config['chains'][number]['id'],\n  request extends viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>[0],\n    SelectChains<config, chainId>[0]\n  > = viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>[0],\n    SelectChains<config, chainId>[0]\n  >,\n  ///\n  chains extends readonly Chain[] = SelectChains<config, chainId>,\n> = {\n  [key in keyof chains]: Evaluate<\n    viem_PrepareTransactionRequestReturnType<\n      IsNarrowable<chains[key], Chain> extends true ? chains[key] : undefined,\n      Account,\n      chains[key],\n      Account,\n      request extends viem_PrepareTransactionRequestRequest<\n        IsNarrowable<chains[key], Chain> extends true ? chains[key] : undefined,\n        chains[key]\n      >\n        ? request\n        : never\n    >\n  > &\n    ConnectorParameter & {\n      chainId: chains[key]['id']\n    }\n}[number]\n\nexport type PrepareTransactionRequestErrorType =\n  viem_PrepareTransactionRequestErrorType\n\n/** https://wagmi.sh/core/api/actions/prepareTransactionRequest */\nexport async function prepareTransactionRequest<\n  config extends Config,\n  chainId extends config['chains'][number]['id'] | undefined,\n  const request extends viem_PrepareTransactionRequestRequest<\n    SelectChains<config, chainId>['0'],\n    SelectChains<config, chainId>['0']\n  >,\n>(\n  config: config,\n  parameters: PrepareTransactionRequestParameters<config, chainId, request>,\n): Promise<PrepareTransactionRequestReturnType<config, chainId, request>> {\n  const { account, chainId, connector, ...rest } = parameters\n\n  let client\n  if (typeof account === 'object' && account.type === 'local')\n    client = config.getClient({ chainId })\n  else\n    client = await getConnectorClient(config, { account, chainId, connector })\n\n  const action = getAction(\n    client,\n    viem_prepareTransactionRequest,\n    'prepareTransactionRequest',\n  )\n  return action({\n    ...rest,\n    ...(account ? { account } : {}),\n  } as unknown as viem_PrepareTransactionRequestParameters) as unknown as Promise<\n    PrepareTransactionRequestReturnType<config, chainId, request>\n  >\n}\n"],"mappings":"AAAA,OAQO,MAAM;AACb,SAASA,yBAAyB,IAAIC,8BAA8B,QAAQ,cAAc;AAE1F,OAA4B,oBAAoB;AAChD,OAAkC,mBAAmB;AACrD,OAGO,wBAAwB;AAC/B,OAKO,mBAAmB;AAC1B,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,kBAAkB,QAAQ,yBAAyB;AA6E5D;AACA,OAAO,eAAeH,yBAAyBA,CAQ7CI,MAAc,EACdC,UAAyE;EAEzE,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,SAAS;IAAE,GAAGC;EAAI,CAAE,GAAGJ,UAAU;EAE3D,IAAIK,MAAM;EACV,IAAI,OAAOJ,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACK,IAAI,KAAK,OAAO,EACzDD,MAAM,GAAGN,MAAM,CAACQ,SAAS,CAAC;IAAEL;EAAO,CAAE,CAAC,MAEtCG,MAAM,GAAG,MAAMP,kBAAkB,CAACC,MAAM,EAAE;IAAEE,OAAO;IAAEC,OAAO;IAAEC;EAAS,CAAE,CAAC;EAE5E,MAAMK,MAAM,GAAGX,SAAS,CACtBQ,MAAM,EACNT,8BAA8B,EAC9B,2BAA2B,CAC5B;EACD,OAAOY,MAAM,CAAC;IACZ,GAAGJ,IAAI;IACP,IAAIH,OAAO,GAAG;MAAEA;IAAO,CAAE,GAAG,EAAE;GACwB,CAEvD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}