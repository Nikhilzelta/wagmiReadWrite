{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recoverTypedDataAddress = void 0;\nconst hashTypedData_js_1 = require(\"./hashTypedData.js\");\nconst recoverAddress_js_1 = require(\"./recoverAddress.js\");\nasync function recoverTypedDataAddress({\n  domain,\n  message,\n  primaryType,\n  signature,\n  types\n}) {\n  return (0, recoverAddress_js_1.recoverAddress)({\n    hash: (0, hashTypedData_js_1.hashTypedData)({\n      domain,\n      message,\n      primaryType,\n      types\n    }),\n    signature\n  });\n}\nexports.recoverTypedDataAddress = recoverTypedDataAddress;","map":{"version":3,"names":["hashTypedData_js_1","require","recoverAddress_js_1","recoverTypedDataAddress","domain","message","primaryType","signature","types","recoverAddress","hash","hashTypedData","exports"],"sources":["/Users/nikhilbhatia/NIkhil/ZT-Prejects/wagmi-react-app/node_modules/@safe-global/safe-apps-sdk/node_modules/viem/utils/signature/recoverTypedDataAddress.ts"],"sourcesContent":["import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashTypedDataErrorType, hashTypedData } from './hashTypedData.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type RecoverTypedDataAddressParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = TypedDataDefinition<TTypedData, TPrimaryType> & {\n  signature: Hex | ByteArray\n}\n\nexport type RecoverTypedDataAddressReturnType = Address\n\nexport type RecoverTypedDataAddressErrorType =\n  | RecoverAddressErrorType\n  | HashTypedDataErrorType\n  | ErrorType\n\nexport async function recoverTypedDataAddress<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain,\n  message,\n  primaryType,\n  signature,\n  types,\n}: RecoverTypedDataAddressParameters<\n  TTypedData,\n  TPrimaryType\n>): Promise<RecoverTypedDataAddressReturnType> {\n  return recoverAddress({\n    hash: hashTypedData({\n      domain,\n      message,\n      primaryType,\n      types,\n    } as unknown as RecoverTypedDataAddressParameters),\n    signature,\n  })\n}\n"],"mappings":";;;;;;AAMA,MAAAA,kBAAA,GAAAC,OAAA;AACA,MAAAC,mBAAA,GAAAD,OAAA;AAmBO,eAAeE,uBAAuBA,CAG3C;EACAC,MAAM;EACNC,OAAO;EACPC,WAAW;EACXC,SAAS;EACTC;AAAK,CAIN;EACC,OAAO,IAAAN,mBAAA,CAAAO,cAAc,EAAC;IACpBC,IAAI,EAAE,IAAAV,kBAAA,CAAAW,aAAa,EAAC;MAClBP,MAAM;MACNC,OAAO;MACPC,WAAW;MACXE;KAC+C,CAAC;IAClDD;GACD,CAAC;AACJ;AAtBAK,OAAA,CAAAT,uBAAA,GAAAA,uBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}